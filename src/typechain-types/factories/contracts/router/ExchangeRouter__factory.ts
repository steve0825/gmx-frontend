/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ExchangeRouter, ExchangeRouterInterface } from "../../../contracts/router/ExchangeRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Router",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract DepositHandler",
        name: "_depositHandler",
        type: "address",
      },
      {
        internalType: "contract WithdrawalHandler",
        name: "_withdrawalHandler",
        type: "address",
      },
      {
        internalType: "contract OrderHandler",
        name: "_orderHandler",
        type: "address",
      },
      {
        internalType: "contract DepositStore",
        name: "_depositStore",
        type: "address",
      },
      {
        internalType: "contract WithdrawalStore",
        name: "_withdrawalStore",
        type: "address",
      },
      {
        internalType: "contract OrderStore",
        name: "_orderStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "_referralStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "BlockedFeature",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyOrder",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minExecutionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NativeTokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedOrderType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "claimAffiliateRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "claimFundingFees",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DepositUtils.CreateDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createDeposit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct OrderBaseUtils.CreateOrderParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OrderBaseUtils.CreateOrderParamsNumbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "enum Order.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
        ],
        internalType: "struct OrderBaseUtils.CreateOrderParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "referralCode",
        type: "bytes32",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketTokensLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marketTokensShortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalUtils.CreateWithdrawalParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createWithdrawal",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositHandler",
    outputs: [
      {
        internalType: "contract DepositHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositStore",
    outputs: [
      {
        internalType: "contract DepositStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderHandler",
    outputs: [
      {
        internalType: "contract OrderHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderStore",
    outputs: [
      {
        internalType: "contract OrderStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "referralStorage",
    outputs: [
      {
        internalType: "contract IReferralStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptablePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "triggerPrice",
        type: "uint256",
      },
    ],
    name: "updateOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalHandler",
    outputs: [
      {
        internalType: "contract WithdrawalHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalStore",
    outputs: [
      {
        internalType: "contract WithdrawalStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101e06040523480156200001257600080fd5b5060405162003f1238038062003f1283398101604081905262000035916200012c565b60016000558989816200004833620000a0565b6001600160a01b0390811660805290811660a0529b8c1660c05250968a1660e05294891661010052928816610120529087166101405286166101605285166101805284166101a0529092166101c05250620002299050565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b03811681146200011757600080fd5b50565b8051620001278162000101565b919050565b60008060008060008060008060008060006101608c8e0312156200014f57600080fd5b8b516200015c8162000101565b60208d0151909b506200016f8162000101565b60408d0151909a50620001828162000101565b60608d0151909950620001958162000101565b60808d0151909850620001a88162000101565b60a08d0151909750620001bb8162000101565b60c08d0151909650620001ce8162000101565b60e08d0151909550620001e18162000101565b6101008d0151909450620001f58162000101565b9250620002066101208d016200011a565b9150620002176101408d016200011a565b90509295989b509295989b9093969950565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c051613bc1620003516000396000818161013c0152610e730152600081816101c7015281816107d50152818161094a0152610a440152600061042e015260006103800152600081816103e70152610eb00152600081816101fb015261050201526000818161031801526105ca01526000818161034c0152818161067c0152818161092901528181610d52015261110a015260008181610495015261122901526000818161028b0152818161065b015281816107680152818161085801528181610908015281816109d601528181610ac501528181610b9801528181610c6001528181610c8c01526110e9015260008181610257015261146d0152613bc16000f3fe60806040526004361061011e5760003560e01c80626cc35e1461012a57806312d43a51146101745780631b5c2de1146101945780632ac38dbd146101b55780632c2f3c07146101e95780634845aaca1461021d57806349287a22146102305780634a4a7b0414610245578063660d0d67146102795780636bd3d451146102ad5780637489ec23146102cd5780637d39aaf1146102e05780638792e621146102f35780639c8b2cfb146103065780639ff78c301461033a578063a25dfba71461036e578063a9dca678146103a2578063ac9650d8146103b5578063b5848305146103d5578063c41b1ab314610409578063c4d74c421461041c578063cfad57a214610450578063e6d66ac814610470578063f887ea401461048357600080fd5b3661012557005b600080fd5b34801561013657600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b60405161016b9190612b89565b60405180910390f35b34801561018057600080fd5b5060015461015e906001600160a01b031681565b6101a76101a2366004612bc3565b6104b7565b60405190815260200161016b565b3480156101c157600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101f557600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b6101a761022b366004612be0565b610588565b61024361023e366004612d3e565b610601565b005b34801561025157600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561028557600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b957600080fd5b506102436102c8366004612db5565b6106f4565b6102436102db366004612de1565b610792565b6102436102ee366004612db5565b6109aa565b610243610301366004612dfa565b610a05565b34801561031257600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561034657600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037a57600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b6101a76103b0366004612e2c565b610dc8565b6103c86103c3366004612e70565b610f37565b60405161016b9190612f34565b3480156103e157600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b610243610417366004612d3e565b61108f565b34801561042857600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561045c57600080fd5b5061024361046b366004612f96565b611176565b61024361047e366004612fb3565b6111cb565b34801561048f57600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b60006002600054036104e45760405162461bcd60e51b81526004016104db90612ff4565b60405180910390fd5b60026000556040516379eb74fb60e11b815233906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f3d6e9f6906105399084908790600401613044565b6020604051808303816000875af1158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190613102565b60016000559392505050565b60006002600054036105ac5760405162461bcd60e51b81526004016104db90612ff4565b6002600055604051634b1a07a760e11b815233906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396340f4e90610539908490879060040161311b565b6002600054036106235760405162461bcd60e51b81526004016104db90612ff4565b600260005581518351146106495760405162461bcd60e51b81526004016104db906131ad565b3360005b84518110156106e8576106d67f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008784815181106106ad576106ad6131d4565b60200260200101518785815181106106c7576106c76131d4565b60200260200101518688611292565b806106e081613200565b91505061064d565b50506001600055505050565b610763604051602001610725906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250611456565b61078e7f00000000000000000000000000000000000000000000000000000000000000008383611506565b5050565b6002600054036107b45760405162461bcd60e51b81526004016104db90612ff4565b600260009081555a60405163023aa9ab60e61b8152600481018490529091507f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b03831690638eaa6ac090602401600060405180830381865afa158015610829573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261085191908101906133fa565b90506108a27f000000000000000000000000000000000000000000000000000000000000000061089d3061088785604001515190565b600781111561089857610898613538565b6116bd565b611749565b336108ac82515190565b6001600160a01b0316146108d25760405162461bcd60e51b81526004016104db9061354e565b6108e66108e182604001515190565b611774565b156109035760405162461bcd60e51b81526004016104db90613581565b61099f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000873388604051806040016040528060158152602001741554d15497d2539255125055115117d0d05390d153605a1b8152506117e5565b505060016000555050565b6002600054036109cc5760405162461bcd60e51b81526004016104db90612ff4565b60026000556109fc7f00000000000000000000000000000000000000000000000000000000000000008383611ac1565b50506001600055565b600260005403610a275760405162461bcd60e51b81526004016104db90612ff4565b6002600090815560405163023aa9ab60e61b8152600481018690527f000000000000000000000000000000000000000000000000000000000000000091906001600160a01b03831690638eaa6ac090602401600060405180830381865afa158015610a96573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610abe91908101906133fa565b9050610b0a7f000000000000000000000000000000000000000000000000000000000000000061089d30610af485604001515190565b6007811115610b0557610b05613538565b611b41565b33610b1482515190565b6001600160a01b031614610b3a5760405162461bcd60e51b81526004016104db9061354e565b610b496108e182604001515190565b15610b665760405162461bcd60e51b81526004016104db90613581565b602081015185905260208101516040018390526020810151606001849052604081015160006060909101526000610bbc7f0000000000000000000000000000000000000000000000000000000000000000611b7b565b90506000836001600160a01b031663352f9aed836040518263ffffffff1660e01b8152600401610bec9190612b89565b6020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190613102565b9050610c5981610c4485602001516080015190565b610c4e91906135c2565b602085015160800152565b6000610c857f000000000000000000000000000000000000000000000000000000000000000085611c28565b9050610cc07f000000000000000000000000000000000000000000000000000000000000000082610cbb87602001516080015190565b611c98565b610cc984611ce6565b60405163e04b68ad60e01b81526001600160a01b0386169063e04b68ad90610cf7908c90889060040161366e565b600060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505060405163cdccb99d60e01b8152600481018c9052602481018b905260448101899052606481018a90527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063cdccb99d9150608401600060405180830381600087803b158015610da057600080fd5b505af1158015610db4573d6000803e3d6000fd5b505060016000555050505050505050505050565b6000600260005403610dec5760405162461bcd60e51b81526004016104db90612ff4565b60026000556007610e04610100850160e0860161377e565b6007811115610e1557610e15613538565b03610e6d5760405162461bcd60e51b815260206004820152602260248201527f45786368616e6765526f757465723a20696e76616c6964206f72646572207479604482015261706560f01b60648201526084016104db565b33610e997f00000000000000000000000000000000000000000000000000000000000000008285611cfc565b604051638cef9feb60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638cef9feb90610ee79084908890600401613828565b6020604051808303816000875af1158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190613102565b6001600055949350505050565b6060816001600160401b03811115610f5157610f51612bf2565b604051908082528060200260200182016040528015610f8457816020015b6060815260200190600190039081610f6f5790505b50905060005b828110156110875760008030868685818110610fa857610fa86131d4565b9050602002810190610fba9190613980565b604051610fc89291906139c6565b600060405180830381855af49150503d8060008114611003576040519150601f19603f3d011682016040523d82523d6000602084013e611008565b606091505b5091509150816110545760448151101561102157600080fd5b6004810190508080602001905181019061103b91906139d6565b60405162461bcd60e51b81526004016104db9190613a1e565b80848481518110611067576110676131d4565b60200260200101819052505050808061107f90613200565b915050610f8a565b505b92915050565b6002600054036110b15760405162461bcd60e51b81526004016104db90612ff4565b600260005581518351146110d75760405162461bcd60e51b81526004016104db906131ad565b3360005b84518110156106e8576111647f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000087848151811061113b5761113b6131d4565b6020026020010151878581518110611155576111556131d4565b60200260200101518688611d6b565b8061116e81613200565b9150506110db565b6001546001600160a01b031633146111bf576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084016104db565b6111c881611ef3565b50565b6002600054036111ed5760405162461bcd60e51b81526004016104db90612ff4565b60026000556040516303704f0f60e31b81526001600160a01b0384811660048301523360248301819052848216604484015260648301849052917f000000000000000000000000000000000000000000000000000000000000000090911690631b82787890608401600060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b50506001600055505050505050565b600061129f858585611f54565b60405163bd02d0f560e01b8152600481018290529091506000906001600160a01b0389169063bd02d0f590602401602060405180830381865afa1580156112ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130e9190613102565b604051637152429d60e11b815260048101849052600060248201529091506001600160a01b0389169063e2a4853a906044016020604051808303816000875af115801561135f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113839190613102565b506040516316c48fdd60e11b81526001600160a01b03871690632d891fba906113b490889085908890600401613a31565b600060405180830381600087803b1580156113ce57600080fd5b505af11580156113e2573d6000803e3d6000fd5b5050604051633be4b15960e01b81526001600160a01b038a169250633be4b159915061141a9089908990899089908890600401613a54565b600060405180830381600087803b15801561143457600080fd5b505af1158015611448573d6000803e3d6000fd5b505050505050505050505050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906114a49033908690600401613a87565b602060405180830381865afa1580156114c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e59190613aa0565b61078e57338160405163a35b150b60e01b81526004016104db929190613abd565b8060000361151357505050565b6000836001600160a01b031663bd02d0f5604051602001611565906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161159991815260200190565b602060405180830381865afa1580156115b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115da9190613102565b9050600080846001600160a01b0316848490604051600060405180830381858888f193505050503d806000811461162d576040519150601f19603f3d011682016040523d82523d6000602084013e611632565b606091505b5091509150811561164557505050505050565b6000816040516020016116589190613a1e565b60405160208183030381529060405290507f6c4e9d88878940a822d239187b8b00d62a80dce222d53bc5f1fb072d9c34b681816040516116989190613a1e565b60405180910390a18585604051633828654560e11b81526004016104db929190613a87565b60006040516020016116f79060208082526014908201527343414e43454c5f4f524445525f4645415455524560601b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038516908201526060810183905260800160405160208183030381529060405280519060200120905092915050565b6117538282611fea565b1561078e57604051630827f79760e41b8152600481018290526024016104db565b60008082600781111561178957611789613538565b14806117a6575060028260078111156117a4576117a4613538565b145b806117c3575060045b8260078111156117c1576117c1613538565b145b80611089575060075b8260078111156117de576117de613538565b1492915050565b60405163023aa9ab60e61b8152600481018590526000906001600160a01b03871690638eaa6ac090602401600060405180830381865afa15801561182d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261185591908101906133fa565b905061186081612056565b61187461186f82604001515190565b612088565b8061188e575061188e61188982604001515190565b6120ac565b1561193f5760208181015101511561193f57856001600160a01b03166388d44f416118bb83516080015190565b602080850151015184515160408087015101516040516001600160e01b031960e087901b1681526001600160a01b0394851660048201526024810193909352921660448201529015156064820152608401600060405180830381600087803b15801561192657600080fd5b505af115801561193a573d6000803e3d6000fd5b505050505b856001600160a01b0316632874528e8661195884515190565b6040518363ffffffff1660e01b8152600401611975929190613ae1565b600060405180830381600087803b15801561198f57600080fd5b505af11580156119a3573d6000803e3d6000fd5b50506040516314a4df2d60e01b81526001600160a01b038a1692506314a4df2d91506119d59088908690600401613af8565b600060405180830381600087803b1580156119ef57600080fd5b505af1158015611a03573d6000803e3d6000fd5b50505050611a1185826120cf565b73__$60bb1dd4670b1e26e5010aaaf2f65694d3$__635a3911ca8988611a3c85602001516080015190565b8789611a4788515190565b60405160e088901b6001600160e01b03191681526001600160a01b0396871660048201529486166024860152604485019390935260648401919091528316608483015290911660a482015260c40160006040518083038186803b158015611aad57600080fd5b505af4158015611448573d6000803e3d6000fd5b80600003611ace57505050565b6000611ad984611b7b565b9050806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b1657600080fd5b505af1158015611b2a573d6000803e3d6000fd5b5050505050611b3b8482858561216e565b50505050565b60006040516020016116f7906020808252601490820152735550444154455f4f524445525f4645415455524560601b604082015260600190565b6000816001600160a01b03166321f8a721604051602001611bb39060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611be791815260200190565b602060405180830381865afa158015611c04573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110899190613b11565b6000611c3961186f83604001515190565b15611c4f57611c48838361229e565b9050611089565b611c63611c5e83604001515190565b6123cb565b15611c7257611c48838361240b565b611c8161188983604001515190565b15611c9057611c4883836124bd565b61108961256f565b6000611ca48484612588565b90506000611cb23a83613b2e565b905080831015611cdf57604051635dac504d60e01b815260048101829052602481018490526044016104db565b5050505050565b6111c8611cf161273a565b602083015160e00152565b80611d0657505050565b6040516356b4b2ad60e01b81526001600160a01b038416906356b4b2ad90611d349085908590600401613a87565b600060405180830381600087803b158015611d4e57600080fd5b505af1158015611d62573d6000803e3d6000fd5b50505050505050565b6000611d788585856127c0565b60405163bd02d0f560e01b8152600481018290529091506000906001600160a01b0389169063bd02d0f590602401602060405180830381865afa158015611dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de79190613102565b604051637152429d60e11b815260048101849052600060248201529091506001600160a01b0389169063e2a4853a906044016020604051808303816000875af1158015611e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5c9190613102565b506040516316c48fdd60e11b81526001600160a01b03871690632d891fba90611e8d90889085908890600401613a31565b600060405180830381600087803b158015611ea757600080fd5b505af1158015611ebb573d6000803e3d6000fd5b50506040516337bf7bff60e01b81526001600160a01b038a1692506337bf7bff915061141a9089908990899089908890600401613a54565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6000604051602001611f8a9060208082526010908201526f10519192531250551157d49155d0549160821b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915280851660608301528316608082015260a0016040516020818303038152906040528051906020012090505b9392505050565b604051633d70e7e560e11b8152600481018290526000906001600160a01b03841690637ae1cfca90602401602060405180830381865afa158015612032573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe39190613aa0565b600061206182515190565b6001600160a01b0316036111c857604051631630779760e01b815260040160405180910390fd5b6000600282600781111561209e5761209e613538565b1480611089575060036117cc565b6000808260078111156120c1576120c1613538565b1480611089575060016117cc565b6120e36120de82516040015190565b6127fe565b6120eb575050565b8051604001516001600160a01b031663d19db5266002612110846020015160a0015190565b61211a9190613b4d565b84846040518463ffffffff1660e01b815260040161213992919061366e565b600060405180830381600088803b15801561215357600080fd5b5087f193505050508015612165575060015b1561078e575050565b8015611b3b576000846001600160a01b031663bd02d0f561218e8661283c565b6040518263ffffffff1660e01b81526004016121ac91815260200190565b602060405180830381865afa1580156121c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ed9190613102565b90506000806121fe868686866128bf565b91509150811561221057505050611b3b565b6000816040516020016122239190613a1e565b60405160208183030381529060405290507f9db60cdf21cde7f760995e23662841725e6aa63be48799796db12b7b2e6b17e2816040516122639190613a1e565b60405180910390a160405163012f3b8f60e71b81526001600160a01b03808916600483015287166024820152604481018690526064016104db565b600080836001600160a01b031663bd02d0f56122b8612a2e565b6040518263ffffffff1660e01b81526004016122d691815260200190565b602060405180830381865afa1580156122f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123179190613102565b9050612328836020015160a0015190565b835160a00151516123399083613b2e565b856001600160a01b031663bd02d0f5612350612aa1565b6040518263ffffffff1660e01b815260040161236e91815260200190565b602060405180830381865afa15801561238b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123af9190613102565b6123b991906135c2565b6123c391906135c2565b949350505050565b600060048260078111156123e1576123e1613538565b14806123fe575060058260078111156123fc576123fc613538565b145b806117c3575060066117af565b600080836001600160a01b031663bd02d0f5612425612a2e565b6040518263ffffffff1660e01b815260040161244391815260200190565b602060405180830381865afa158015612460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124849190613102565b9050612495836020015160a0015190565b835160a00151516124a69083613b2e565b856001600160a01b031663bd02d0f5612350612adf565b600080836001600160a01b031663bd02d0f56124d7612a2e565b6040518263ffffffff1660e01b81526004016124f591815260200190565b602060405180830381865afa158015612512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125369190613102565b9050612547836020015160a0015190565b835160a00151516125589083613b2e565b856001600160a01b031663bd02d0f5612350612b1d565b60405163c1c0083160e01b815260040160405180910390fd5b600080836001600160a01b031663bd02d0f56040516020016125da906020808252601c908201527b1154d512535055115117d1915157d09054d157d1d054d7d31253525560221b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161260e91815260200190565b602060405180830381865afa15801561262b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061264f9190613102565b90506000846001600160a01b031663bd02d0f56040516020016126a3906020808252601f908201527f455354494d415445445f4645455f4d554c5449504c4945525f464143544f5200604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016126d791815260200190565b602060405180830381865afa1580156126f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127189190613102565b905060006127268583612b57565b61273090846135c2565b9695505050505050565b600061a4b146148061274e575062066eeb46145b156127bb5760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b69190613102565b905090565b504390565b6000604051602001611f8a9060208082526018908201527710d31052535050931157d1955391125391d7d05353d5539560421b604082015260600190565b60006001600160a01b03821661281657506000919050565b612828826001600160a01b0316612b7a565b61283457506000919050565b506001919050565b600060405160200161287a906020808252601890820152771513d2d15397d514905394d1915497d1d054d7d31253525560421b604082015260600190565b60405160208183030381529060405280519060200120826040516020016128a2929190613ae1565b604051602081830303815290604052805190602001209050919050565b60006060600063a9059cbb60e01b86866040516024016128e0929190613a87565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080886001600160a01b031686846040516129319190613b6f565b60006040518083038160008787f1925050503d806000811461296f576040519150601f19603f3d011682016040523d82523d6000602084013e612974565b606091505b50915091508115612a1c5780516000036129d95761299a896001600160a01b0316612b7a565b6129d95760006040518060400160405280601481526020017310d85b1b081d1bc81b9bdb8b58dbdb9d1c9858dd60621b81525094509450505050612a25565b600081511180156129fb5750808060200190518101906129f99190613aa0565b155b15612a0e57600094509250612a25915050565b600194509250612a25915050565b60009450925050505b94509492505050565b6000604051602001612a699060208082526015908201527414d25391d31157d4d5d05417d1d054d7d312535255605a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301520160405160208183030381529060405280519060200120905090565b6000604051602001612a6990602080825260189082015277125390d4915054d157d3d491115497d1d054d7d31253525560421b604082015260600190565b6000604051602001612a6990602080825260189082015277111150d4915054d157d3d491115497d1d054d7d31253525560421b604082015260600190565b6000604051602001612a699060208082526014908201527314d5d05417d3d491115497d1d054d7d31253525560621b604082015260600190565b600068327cb2734119d3b7a9601e1b612b708385613b2e565b611fe39190613b4d565b6001600160a01b03163b151590565b6001600160a01b0391909116815260200190565b6001600160a01b03169052565b60006101408284031215612bbd57600080fd5b50919050565b60006101408284031215612bd657600080fd5b611fe38383612baa565b600060e08284031215612bbd57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612c2a57612c2a612bf2565b60405290565b60405160c081016001600160401b0381118282101715612c2a57612c2a612bf2565b604051601f8201601f191681016001600160401b0381118282101715612c7a57612c7a612bf2565b604052919050565b60006001600160401b03821115612c9b57612c9b612bf2565b5060051b60200190565b6001600160a01b03811681146111c857600080fd5b8035612cc581612ca5565b919050565b600082601f830112612cdb57600080fd5b81356020612cf0612ceb83612c82565b612c52565b82815260059290921b84018101918181019086841115612d0f57600080fd5b8286015b84811015612d33578035612d2681612ca5565b8352918301918301612d13565b509695505050505050565b600080600060608486031215612d5357600080fd5b83356001600160401b0380821115612d6a57600080fd5b612d7687838801612cca565b94506020860135915080821115612d8c57600080fd5b50612d9986828701612cca565b9250506040840135612daa81612ca5565b809150509250925092565b60008060408385031215612dc857600080fd5b8235612dd381612ca5565b946020939093013593505050565b600060208284031215612df357600080fd5b5035919050565b60008060008060808587031215612e1057600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215612e3f57600080fd5b82356001600160401b03811115612e5557600080fd5b612e6185828601612baa565b95602094909401359450505050565b60008060208385031215612e8357600080fd5b82356001600160401b0380821115612e9a57600080fd5b818501915085601f830112612eae57600080fd5b813581811115612ebd57600080fd5b8660208260051b8501011115612ed257600080fd5b60209290920196919550909350505050565b60005b83811015612eff578181015183820152602001612ee7565b50506000910152565b60008151808452612f20816020860160208601612ee4565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612f8957603f19888603018452612f77858351612f08565b94509285019290850190600101612f5b565b5092979650505050505050565b600060208284031215612fa857600080fd5b8135611fe381612ca5565b600080600060608486031215612fc857600080fd5b8335612fd381612ca5565b92506020840135612fe381612ca5565b929592945050506040919091013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b80151581146111c857600080fd5b8035612cc58161302b565b6001600160a01b0383168152610160810161306a6020830161306585612cba565b612b9d565b61307660208401612cba565b6130836040840182612b9d565b5061309060408401612cba565b61309d6060840182612b9d565b5060608301356080830152608083013560a083015260a083013560c083015260c083013560e08301526130d260e08401613039565b6101006130e28185018315159052565b610120915080850135828501525080840135610140840152509392505050565b60006020828403121561311457600080fd5b5051919050565b6001600160a01b038381168252610100820190833561313981612ca5565b818116602085015250602084013561315081612ca5565b818116604085015250604084013561316781612ca5565b818116606085015250506060830135608083015260808301356131898161302b565b80151560a08401525060a083013560c083015260c083013560e08301529392505050565b6020808252600d908201526c125b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201613212576132126131ea565b5060010190565b8051612cc581612ca5565b600082601f83011261323557600080fd5b81516020613245612ceb83612c82565b82815260059290921b8401810191818101908684111561326457600080fd5b8286015b84811015612d3357805161327b81612ca5565b8352918301918301613268565b600061010080838503121561329c57600080fd5b604051908101906001600160401b03821181831017156132be576132be612bf2565b81604052809250835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152505092915050565b600881106111c857600080fd5b60006080828403121561333657600080fd5b61333e612c08565b9050815161334b81613317565b8152602082015161335b8161302b565b6020820152604082015161336e8161302b565b604082015260608201516133818161302b565b606082015292915050565b60006001600160401b038311156133a5576133a5612bf2565b6133b8601f8401601f1916602001612c52565b90508281528383830111156133cc57600080fd5b611fe3836020830184612ee4565b600082601f8301126133eb57600080fd5b611fe38383516020850161338c565b60006020828403121561340c57600080fd5b81516001600160401b038082111561342357600080fd5b908301906101c0828603121561343857600080fd5b613440612c08565b82518281111561344f57600080fd5b830160c0818803121561346157600080fd5b613469612c30565b815161347481612ca5565b8152602082015161348481612ca5565b6020820152604082015161349781612ca5565b60408201526134a860608301613219565b60608201526134b960808301613219565b608082015260a0820151848111156134d057600080fd5b6134dc89828501613224565b60a0830152508252506134f28660208501613288565b6020820152613505866101208501613324565b60408201526101a08301518281111561351d57600080fd5b613529878286016133da565b60608301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60208082526019908201527822bc31b430b733b2a937baba32b91d103337b93134b23232b760391b604082015260600190565b60208082526021908201527f45786368616e6765526f757465723a20696e76616c6964206f726465725479706040820152606560f81b606082015260800190565b80820180821115611089576110896131ea565b600081518084526020808501945080840160005b8381101561360e5781516001600160a01b0316875295820195908201906001016135e9565b509495945050505050565b6008811061363757634e487b7160e01b600052602160045260246000fd5b9052565b613646828251613619565b6020810151151560208301526040810151151560408301526060810151151560608301525050565b8281526040602080830182905283516101c08385015280516001600160a01b039081166102008601529181015182166102208501529182015181166102408401526060820151811661026084015260808201511661028083015260a0015160c06102a08301526000906136e56102c08401826135d5565b905060208401516137426060850182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b50604084015161375661016085018261363b565b506060840151838203603f19016101e08501526127308282612f08565b8035612cc581613317565b60006020828403121561379057600080fd5b8135611fe381613317565b6000808335601e198436030181126137b257600080fd5b83016020810192503590506001600160401b038111156137d157600080fd5b8060051b36038213156137e357600080fd5b9250929050565b8183526000602080850194508260005b8581101561360e57813561380d81612ca5565b6001600160a01b0316875295820195908201906001016137fa565b6001600160a01b03838116825260406020830152600090833536859003609e1901811261385457600080fd5b8481019050610140806040860152813561386d81612ca5565b8316610180860152602082013561388381612ca5565b83166101a0860152604082013561389981612ca5565b83166101c086015260608201356138af81612ca5565b83166101e08601526138c4608083018361379b565b9350915060a06102008601526138df610220860184846137ea565b92506139266060860160208801803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a081013560a08301525050565b61393260e08701613773565b915061012061394381870184613619565b6139506101008801613039565b801515878401529250613964818801613039565b9250505061397761016085018215159052565b50949350505050565b6000808335601e1984360301811261399757600080fd5b8301803591506001600160401b038211156139b157600080fd5b6020019150368190038213156137e357600080fd5b8183823760009101908152919050565b6000602082840312156139e857600080fd5b81516001600160401b038111156139fe57600080fd5b8201601f81018413613a0f57600080fd5b6123c38482516020840161338c565b602081526000611fe36020830184612f08565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b039586168152938516602085015291841660408401529092166060820152608081019190915260a00190565b6001600160a01b03929092168252602082015260400190565b600060208284031215613ab257600080fd5b8151611fe38161302b565b6001600160a01b03831681526040602082018190526000906123c390830184612f08565b9182526001600160a01b0316602082015260400190565b8281526040602082015260006123c36040830184612f08565b600060208284031215613b2357600080fd5b8151611fe381612ca5565b6000816000190483118215151615613b4857613b486131ea565b500290565b600082613b6a57634e487b7160e01b600052601260045260246000fd5b500490565b60008251613b81818460208701612ee4565b919091019291505056fea264697066735822122078a8ad4eec72aa7bc5a966d831f789d648c865e34d63f72104df79bba945da1364736f6c63430008100033";

type ExchangeRouterConstructorParams =
  | [linkLibraryAddresses: ExchangeRouterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ExchangeRouterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ExchangeRouter__factory extends ContractFactory {
  constructor(...args: ExchangeRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, ExchangeRouter__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: ExchangeRouterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$60bb1dd4670b1e26e5010aaaf2f65694d3\\$__", "g"),
      linkLibraryAddresses["contracts/gas/GasUtils.sol:GasUtils"].replace(/^0x/, "").toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _depositHandler: PromiseOrValue<string>,
    _withdrawalHandler: PromiseOrValue<string>,
    _orderHandler: PromiseOrValue<string>,
    _depositStore: PromiseOrValue<string>,
    _withdrawalStore: PromiseOrValue<string>,
    _orderStore: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExchangeRouter> {
    return super.deploy(
      _router,
      _roleStore,
      _dataStore,
      _eventEmitter,
      _depositHandler,
      _withdrawalHandler,
      _orderHandler,
      _depositStore,
      _withdrawalStore,
      _orderStore,
      _referralStorage,
      overrides || {}
    ) as Promise<ExchangeRouter>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _depositHandler: PromiseOrValue<string>,
    _withdrawalHandler: PromiseOrValue<string>,
    _orderHandler: PromiseOrValue<string>,
    _depositStore: PromiseOrValue<string>,
    _withdrawalStore: PromiseOrValue<string>,
    _orderStore: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _roleStore,
      _dataStore,
      _eventEmitter,
      _depositHandler,
      _withdrawalHandler,
      _orderHandler,
      _depositStore,
      _withdrawalStore,
      _orderStore,
      _referralStorage,
      overrides || {}
    );
  }
  override attach(address: string): ExchangeRouter {
    return super.attach(address) as ExchangeRouter;
  }
  override connect(signer: Signer): ExchangeRouter__factory {
    return super.connect(signer) as ExchangeRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeRouterInterface {
    return new utils.Interface(_abi) as ExchangeRouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ExchangeRouter {
    return new Contract(address, _abi, signerOrProvider) as ExchangeRouter;
  }
}

export interface ExchangeRouterLibraryAddresses {
  ["contracts/gas/GasUtils.sol:GasUtils"]: string;
}
