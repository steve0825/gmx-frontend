/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { OrderStore, OrderStoreInterface } from "../../../contracts/order/OrderStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NativeTokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "get",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountOrderKeys",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getOrderKeys",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialCollateralToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "swapPath",
            type: "address[]",
          },
        ],
        internalType: "struct Order.Addresses",
        name: "addresses",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sizeDeltaUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialCollateralDeltaAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "acceptablePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Order.Numbers",
        name: "numbers",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Order.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFrozen",
            type: "bool",
          },
        ],
        internalType: "struct Order.Flags",
        name: "flags",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recordTransferIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldUnwrapNativeToken",
        type: "bool",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002634380380620026348339810160408190526200003491620000e0565b81818181818181620000463362000066565b6001600160a01b039081166080521660a052506200011f95505050505050565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b0381168114620000dd57600080fd5b50565b60008060408385031215620000f457600080fd5b82516200010181620000c7565b60208401519092506200011481620000c7565b809150509250929050565b60805160a0516124cc62000168600039600081816101f7015281816105080152818161057901528181610dcf01526111f90152600081816101960152610cfd01526124cc6000f3fe6080604052600436106100d25760003560e01c806312d43a51146100de5780632874528e146101145780632d891fba14610136578063352f9aed146101565780634a4a7b0414610184578063523fba7f146101b8578063660d0d67146101e55780636bd3d451146102195780636e343b2f1461023957806388d44f41146102665780638d0a5fbb146102865780638eaa6ac01461029b5780639227bac4146102c85780639c3f1e90146102e8578063c5d9eb4814610318578063cfad57a214610338578063e04b68ad1461035857600080fd5b366100d957005b600080fd5b3480156100ea57600080fd5b506000546100fe906001600160a01b031681565b60405161010b91906119b9565b60405180910390f35b34801561012057600080fd5b5061013461012f3660046119ed565b610378565b005b34801561014257600080fd5b50610134610151366004611a1d565b6104af565b34801561016257600080fd5b50610176610171366004611a5f565b6104cc565b60405190815260200161010b565b34801561019057600080fd5b506100fe7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c457600080fd5b506101766101d3366004611a5f565b60016020526000908152604090205481565b3480156101f157600080fd5b506100fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561022557600080fd5b50610134610234366004611a83565b6104f1565b34801561024557600080fd5b50610259610254366004611aaf565b610532565b60405161010b9190611ae4565b34801561027257600080fd5b50610134610281366004611b36565b610560565b34801561029257600080fd5b506101766105e4565b3480156102a757600080fd5b506102bb6102b6366004611b89565b6105f5565b60405161010b9190611d30565b3480156102d457600080fd5b506102596102e3366004611d9c565b61084d565b3480156102f457600080fd5b50610308610303366004611b89565b610864565b60405161010b9493929190611dbe565b34801561032457600080fd5b50610176610333366004611a5f565b610a82565b34801561034457600080fd5b50610134610353366004611a5f565b610aa3565b34801561036457600080fd5b50610134610373366004612084565b610afd565b6103c860405160200161038a906121ce565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610ce6565b6000828152600260208190526040822080546001600160a01b0319908116825560018201805482169055918101805483169055600381018054831690556004810180549092169091559081816104216005830182611829565b5050600060068301819055600783018190556008830181905560098301819055600a8301819055600b8301819055600c8301819055600d8301819055600e8301805463ffffffff1916905561047a90600f840190611847565b50506001600160a01b038116600090815260056020526040902061049e9083610d96565b506104aa600383610d96565b505050565b6104c160405160200161038a906121ce565b6104aa838383610da2565b60006104e060405160200161038a906121ce565b6104e982610dff565b90505b919050565b61050360405160200161038a906121ce565b61052e7f00000000000000000000000000000000000000000000000000000000000000008383610ea8565b5050565b6001600160a01b038316600090815260056020526040902060609061055890848461105f565b949350505050565b61057260405160200161038a906121ce565b600061059d7f000000000000000000000000000000000000000000000000000000000000000061111f565b9050806001600160a01b0316856001600160a01b03161480156105bd5750815b156105d2576105cd8585856111cc565b6105dd565b6105dd858585610da2565b5050505050565b60006105f06003611220565b905090565b6105fd611881565b60008281526002602081815260409283902083516101408101855281546001600160a01b03908116608083019081526001840154821660a084015294830154811660c08301526003830154811660e08301526004830154166101008201526005820180548651818602810186019097528087529195929486949093869361012087019391928301828280156106bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161069d575b50505050508152505081526020016006820160405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250508152602001600e82016040518060800160405290816000820160009054906101000a900460ff16600781111561076157610761611c83565b600781111561077257610772611c83565b8152905460ff6101008204811615156020808501919091526201000083048216151560408501526301000000909204161515606090920191909152908252600f8301805492909101916107c4906121f2565b80601f01602080910402602001604051908101604052809291908181526020018280546107f0906121f2565b801561083d5780601f106108125761010080835404028352916020019161083d565b820191906000526020600020905b81548152906001019060200180831161082057829003601f168201915b5050505050815250509050919050565b606061085b6003848461105f565b90505b92915050565b600260208181526000928352604092839020835160c08101855281546001600160a01b039081168252600183015481168285015293820154841681860152600382015484166060820152600482015490931660808401526005810180548551818502810185019096528086529194859360a08601939192919083018282801561091657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108f8575b505050919092525050604080516101008101825260068501548152600780860154602083015260088601548284015260098601546060830152600a860154608080840191909152600b87015460a0840152600c87015460c0840152600d87015460e08401528351908101909352600e860180549596929592945091839160ff909116908111156109a8576109a8611c83565b60078111156109b9576109b9611c83565b8152905460ff61010082048116151560208401526201000082048116151560408401526301000000909104161515606090910152600f820180549192916109ff906121f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2b906121f2565b8015610a785780601f10610a4d57610100808354040283529160200191610a78565b820191906000526020600020905b815481529060010190602001808311610a5b57829003601f168201915b5050505050905084565b6001600160a01b03811660009081526005602052604081206104e990611220565b6000546001600160a01b03163314610af1576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b610afa8161122a565b50565b610b0f60405160200161038a906121ce565b6000828152600260208181526040928390208451805182546001600160a01b03199081166001600160a01b0392831617845582850151600185018054831691841691909117905595820151948301805487169582169590951790945560608101516003830180548716918616919091179055608081015160048301805490961694169390931790935560a08201518051859493928492610bb8926005850192919091019061193f565b50505060208281015180516006840155908101516007808401919091556040808301516008850155606083015160098501556080830151600a85015560a0830151600b85015560c0830151600c85015560e090920151600d840155908301518051600e8401805492939092839160ff19909116906001908490811115610c4057610c40611c83565b0217905550602082015181546040840151606094850151151563010000000263ff00000019911515620100000262ff000019941515610100029490941662ffff0019909316929092179290921791909116179055820151600f820190610ca6908261227a565b50905050610cda8260056000610cbb85515190565b6001600160a01b0316815260208101919091526040016000209061128b565b506104aa60038361128b565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610d349033908690600401612339565b602060405180830381865afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190612352565b61052e57338160405163a35b150b60e01b8152600401610ae892919061236f565b600061085b8383611297565b306001600160a01b03821603610dca5760405162461bcd60e51b8152600401610ae890612393565b610df67f000000000000000000000000000000000000000000000000000000000000000084838561138a565b6104aa836114c0565b6001600160a01b0381166000818152600160205260408082205490516370a0823160e01b8152919290918391906370a0823190610e409030906004016119b9565b602060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8191906123c3565b6001600160a01b0385166000908152600160205260409020819055905061055882826123f2565b80600003610eb557505050565b6000836001600160a01b031663bd02d0f5604051602001610f07906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610f3b91815260200190565b602060405180830381865afa158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7c91906123c3565b9050600080846001600160a01b0316848490604051600060405180830381858888f193505050503d8060008114610fcf576040519150601f19603f3d011682016040523d82523d6000602084013e610fd4565b606091505b50915091508115610fe757505050505050565b600081604051602001610ffa9190612405565b60405160208183030381529060405290507f6c4e9d88878940a822d239187b8b00d62a80dce222d53bc5f1fb072d9c34b6818160405161103a9190612405565b60405180910390a18585604051633828654560e11b8152600401610ae8929190612339565b6060600061106c85611220565b90508083111561107a578092505b600061108685856123f2565b6001600160401b0381111561109d5761109d611e0d565b6040519080825280602002602001820160405280156110c6578160200160208202803683370190505b509050845b84811015611115576110dd8782611549565b826110e888846123f2565b815181106110f8576110f8612418565b60209081029190910101528061110d8161242e565b9150506110cb565b5095945050505050565b6000816001600160a01b03166321f8a7216040516020016111579060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161118b91815260200190565b602060405180830381865afa1580156111a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190612447565b306001600160a01b038216036111f45760405162461bcd60e51b8152600401610ae890612393565b610df67f0000000000000000000000000000000000000000000000000000000000000000848385611555565b60006104e9825490565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b600061085b83836115c0565b600081815260018301602052604081205480156113805760006112bb6001836123f2565b85549091506000906112cf906001906123f2565b90508181146113345760008660000182815481106112ef576112ef612418565b906000526020600020015490508087600001848154811061131257611312612418565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061134557611345612464565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061085e565b600091505061085e565b80156114ba576000846001600160a01b031663bd02d0f56113aa8661160f565b6040518263ffffffff1660e01b81526004016113c891815260200190565b602060405180830381865afa1580156113e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140991906123c3565b905060008061141a86868686611697565b91509150811561142c575050506114ba565b60008160405160200161143f9190612405565b60405160208183030381529060405290507f9db60cdf21cde7f760995e23662841725e6aa63be48799796db12b7b2e6b17e28160405161147f9190612405565b60405180910390a160405163012f3b8f60e71b81526001600160a01b0380891660048301528716602482015260448101869052606401610ae8565b50505050565b6040516370a0823160e01b81526001600160a01b038216906370a08231906114ec9030906004016119b9565b602060405180830381865afa158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152d91906123c3565b6001600160a01b03909116600090815260016020526040902055565b600061085b83836117ff565b80156114ba57604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b15801561159d57600080fd5b505af11580156115b1573d6000803e3d6000fd5b505050506114ba848383610ea8565b60008181526001830160205260408120546116075750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561085e565b50600061085e565b600060405160200161164d906020808252601890820152771513d2d15397d514905394d1915497d1d054d7d31253525560421b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b60006060600063a9059cbb60e01b86866040516024016116b8929190612339565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080886001600160a01b03168684604051611709919061247a565b60006040518083038160008787f1925050503d8060008114611747576040519150601f19603f3d011682016040523d82523d6000602084013e61174c565b606091505b509150915081156117ed5780516000036117aa576001600160a01b0389163b6117aa5760006040518060400160405280601481526020017310d85b1b081d1bc81b9bdb8b58dbdb9d1c9858dd60621b815250945094505050506117f6565b600081511180156117cc5750808060200190518101906117ca9190612352565b155b156117df576000945092506117f6915050565b6001945092506117f6915050565b60009450925050505b94509492505050565b600082600001828154811061181657611816612418565b9060005260206000200154905092915050565b5080546000825590600052602060002090810190610afa91906119a4565b508054611853906121f2565b6000825580601f10611863575050565b601f016020900490600052602060002090810190610afa91906119a4565b60408051610140810190915260006080820181815260a0830182905260c0830182905260e0830182905261010083019190915260606101208301528190815260200161190b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b828054828255906000526020600020908101928215611994579160200282015b8281111561199457825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061195f565b506119a09291506119a4565b5090565b5b808211156119a057600081556001016119a5565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610afa57600080fd5b80356104ec816119cd565b60008060408385031215611a0057600080fd5b823591506020830135611a12816119cd565b809150509250929050565b600080600060608486031215611a3257600080fd5b8335611a3d816119cd565b9250602084013591506040840135611a54816119cd565b809150509250925092565b600060208284031215611a7157600080fd5b8135611a7c816119cd565b9392505050565b60008060408385031215611a9657600080fd5b8235611aa1816119cd565b946020939093013593505050565b600080600060608486031215611ac457600080fd5b8335611acf816119cd565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015611b1c57835183529284019291840191600101611b00565b50909695505050505050565b8015158114610afa57600080fd5b60008060008060808587031215611b4c57600080fd5b8435611b57816119cd565b9350602085013592506040850135611b6e816119cd565b91506060850135611b7e81611b28565b939692955090935050565b600060208284031215611b9b57600080fd5b5035919050565b600060c0830160018060a01b0380845116855260208181860151168187015281604086015116604087015281606086015116606087015281608086015116608087015260a085015160c060a088015283815180865260e0890191508383019550600092505b80831015611c2957855185168252948301946001929092019190830190611c07565b50979650505050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b634e487b7160e01b600052602160045260246000fd5b805160088110611cb957634e487b7160e01b600052602160045260246000fd5b82526020818101511515908301526040808201511515908301526060908101511515910152565b60005b83811015611cfb578181015183820152602001611ce3565b50506000910152565b60008151808452611d1c816020860160208601611ce0565b601f01601f19169290920160200192915050565b60208152600082516101c0806020850152611d4f6101e0850183611ba2565b91506020850151611d636040860182611c35565b506040850151611d77610140860182611c99565b506060850151848303601f190182860152611d928382611d04565b9695505050505050565b60008060408385031215611daf57600080fd5b50508035926020909101359150565b60006101c0808352611dd281840188611ba2565b9050611de16020840187611c35565b611def610120840186611c99565b8281036101a0840152611e028185611d04565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611e4557611e45611e0d565b60405290565b60405160c081016001600160401b0381118282101715611e4557611e45611e0d565b604051601f8201601f191681016001600160401b0381118282101715611e9557611e95611e0d565b604052919050565b600082601f830112611eae57600080fd5b813560206001600160401b03821115611ec957611ec9611e0d565b8160051b611ed8828201611e6d565b9283528481018201928281019087851115611ef257600080fd5b83870192505b84831015611e02578235611f0b816119cd565b82529183019190830190611ef8565b6000610100808385031215611f2e57600080fd5b604051908101906001600160401b0382118183101715611f5057611f50611e0d565b81604052809250833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152505092915050565b600060808284031215611fbb57600080fd5b611fc3611e23565b9050813560088110611fd457600080fd5b81526020820135611fe481611b28565b60208201526040820135611ff781611b28565b6040820152606082013561200a81611b28565b606082015292915050565b600082601f83011261202657600080fd5b81356001600160401b0381111561203f5761203f611e0d565b612052601f8201601f1916602001611e6d565b81815284602083860101111561206757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561209757600080fd5b8235915060208301356001600160401b03808211156120b557600080fd5b908401906101c082870312156120ca57600080fd5b6120d2611e23565b8235828111156120e157600080fd5b830160c081890312156120f357600080fd5b6120fb611e4b565b8135612106816119cd565b81526020820135612116816119cd565b60208201526040820135612129816119cd565b604082015261213a606083016119e2565b606082015261214b608083016119e2565b608082015260a08201358481111561216257600080fd5b61216e8a828501611e9d565b60a0830152508252506121848760208501611f1a565b6020820152612197876101208501611fa9565b60408201526101a0830135828111156121af57600080fd5b6121bb88828601612015565b6060830152508093505050509250929050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b600181811c9082168061220657607f821691505b60208210810361222657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104aa57600081815260208120601f850160051c810160208610156122535750805b601f850160051c820191505b818110156122725782815560010161225f565b505050505050565b81516001600160401b0381111561229357612293611e0d565b6122a7816122a184546121f2565b8461222c565b602080601f8311600181146122dc57600084156122c45750858301515b600019600386901b1c1916600185901b178555612272565b600085815260208120601f198616915b8281101561230b578886015182559484019460019091019084016122ec565b50858210156123295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03929092168252602082015260400190565b60006020828403121561236457600080fd5b8151611a7c81611b28565b6001600160a01b038316815260406020820181905260009061055890830184611d04565b6020808252601690820152752130b7359d1034b73b30b634b2103932b1b2b4bb32b960511b604082015260600190565b6000602082840312156123d557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561085e5761085e6123dc565b60208152600061085b6020830184611d04565b634e487b7160e01b600052603260045260246000fd5b600060018201612440576124406123dc565b5060010190565b60006020828403121561245957600080fd5b8151611a7c816119cd565b634e487b7160e01b600052603160045260246000fd5b6000825161248c818460208701611ce0565b919091019291505056fea26469706673582212204f9c737c4257b0d0eaa2e5208b48d855269f8a9b786ed1a34fc3ca066de3a56364736f6c63430008100033";

type OrderStoreConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: OrderStoreConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class OrderStore__factory extends ContractFactory {
  constructor(...args: OrderStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderStore> {
    return super.deploy(_roleStore, _dataStore, overrides || {}) as Promise<OrderStore>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override attach(address: string): OrderStore {
    return super.attach(address) as OrderStore;
  }
  override connect(signer: Signer): OrderStore__factory {
    return super.connect(signer) as OrderStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderStoreInterface {
    return new utils.Interface(_abi) as OrderStoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OrderStore {
    return new Contract(address, _abi, signerOrProvider) as OrderStore;
  }
}
