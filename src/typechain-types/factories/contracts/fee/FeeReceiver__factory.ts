/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { FeeReceiver, FeeReceiverInterface } from "../../../contracts/fee/FeeReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NativeTokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "notifyFeeReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldUnwrapNativeToken",
        type: "bool",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161106938038061106983398101604081905261002f916100d3565b818181818161003d3361005a565b6001600160a01b039081166080521660a0525061010d9350505050565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b03811681146100d057600080fd5b50565b600080604083850312156100e657600080fd5b82516100f1816100bb565b6020840151909250610102816100bb565b809150509250929050565b60805160a051610f146101556000396000818161014a015281816102b2015281816102f50152818161055c015261081a01526000818161011601526104960152610f146000f3fe60806040526004361061007a5760003560e01c806310015f981461008657806312d43a51146100a85780632d891fba146100e45780634a4a7b0414610104578063660d0d67146101385780636bd3d4511461016c57806388d44f411461018c5780639ba372c2146101ac578063cfad57a2146101cc57600080fd5b3661008157005b600080fd5b34801561009257600080fd5b506100a66100a1366004610c48565b6101ec565b005b3480156100b457600080fd5b506000546100c8906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100f057600080fd5b506100a66100ff366004610c80565b61023b565b34801561011057600080fd5b506100c87f000000000000000000000000000000000000000000000000000000000000000081565b34801561014457600080fd5b506100c87f000000000000000000000000000000000000000000000000000000000000000081565b34801561017857600080fd5b506100a6610187366004610cc2565b61029b565b34801561019857600080fd5b506100a66101a7366004610cfc565b6102dc565b3480156101b857600080fd5b506100a66101c7366004610c80565b610360565b3480156101d857600080fd5b506100a66101e7366004610d4f565b610425565b604080518481526001600160a01b03841660208201529081018290527fc7191f96ab050b47f8820c0915947f2c6e86096b509d5cd8b414b458ea86cb19906060015b60405180910390a1505050565b61028b60405160200161024d90610d73565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b81525061047f565b61029683838361052f565b505050565b6102ad60405160200161024d90610d73565b6102d87f00000000000000000000000000000000000000000000000000000000000000008383610583565b5050565b6102ee60405160200161024d90610d73565b60006103197f000000000000000000000000000000000000000000000000000000000000000061073a565b9050806001600160a01b0316856001600160a01b03161480156103395750815b1561034e576103498585856107ed565b610359565b61035985858561052f565b5050505050565b6103cf604051602001610391906020808252600a90820152692322a2afa5a2a2a822a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a8152602001692322a2afa5a2a2a822a960b11b81525061047f565b6103da83838361052f565b604080516001600160a01b038086168252602082018590528316918101919091527f87044da2612407bc001bb0985725dcc651a0dc71eaabfd1d7e8617ca85a8c19c9060600161022e565b6000546001600160a01b03163314610473576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b61047c81610841565b50565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906104cd9033908690600401610d97565b602060405180830381865afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e9190610db0565b6102d857338160405163a35b150b60e01b815260040161046a929190610e1d565b306001600160a01b038216036105575760405162461bcd60e51b815260040161046a90610e49565b6102967f00000000000000000000000000000000000000000000000000000000000000008483856108a2565b8060000361059057505050565b6000836001600160a01b031663bd02d0f56040516020016105e2906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161061691815260200190565b602060405180830381865afa158015610633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106579190610e79565b9050600080846001600160a01b0316848490604051600060405180830381858888f193505050503d80600081146106aa576040519150601f19603f3d011682016040523d82523d6000602084013e6106af565b606091505b509150915081156106c257505050505050565b6000816040516020016106d59190610e92565b60405160208183030381529060405290507f6c4e9d88878940a822d239187b8b00d62a80dce222d53bc5f1fb072d9c34b681816040516107159190610e92565b60405180910390a18585604051633828654560e11b815260040161046a929190610d97565b6000816001600160a01b03166321f8a7216040516020016107729060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016107a691815260200190565b602060405180830381865afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190610ea5565b92915050565b306001600160a01b038216036108155760405162461bcd60e51b815260040161046a90610e49565b6102967f00000000000000000000000000000000000000000000000000000000000000008483856109d8565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b80156109d2576000846001600160a01b031663bd02d0f56108c286610a43565b6040518263ffffffff1660e01b81526004016108e091815260200190565b602060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109219190610e79565b905060008061093286868686610acb565b915091508115610944575050506109d2565b6000816040516020016109579190610e92565b60405160208183030381529060405290507f9db60cdf21cde7f760995e23662841725e6aa63be48799796db12b7b2e6b17e2816040516109979190610e92565b60405180910390a160405163012f3b8f60e71b81526001600160a01b038089166004830152871660248201526044810186905260640161046a565b50505050565b80156109d257604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b158015610a2057600080fd5b505af1158015610a34573d6000803e3d6000fd5b505050506109d2848383610583565b6000604051602001610a81906020808252601890820152771513d2d15397d514905394d1915497d1d054d7d31253525560421b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b60006060600063a9059cbb60e01b8686604051602401610aec929190610d97565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080886001600160a01b03168684604051610b3d9190610ec2565b60006040518083038160008787f1925050503d8060008114610b7b576040519150601f19603f3d011682016040523d82523d6000602084013e610b80565b606091505b50915091508115610c21578051600003610bde576001600160a01b0389163b610bde5760006040518060400160405280601481526020017310d85b1b081d1bc81b9bdb8b58dbdb9d1c9858dd60621b81525094509450505050610c2a565b60008151118015610c00575080806020019051810190610bfe9190610db0565b155b15610c1357600094509250610c2a915050565b600194509250610c2a915050565b60009450925050505b94509492505050565b6001600160a01b038116811461047c57600080fd5b600080600060608486031215610c5d57600080fd5b833592506020840135610c6f81610c33565b929592945050506040919091013590565b600080600060608486031215610c9557600080fd5b8335610ca081610c33565b9250602084013591506040840135610cb781610c33565b809150509250925092565b60008060408385031215610cd557600080fd5b8235610ce081610c33565b946020939093013593505050565b801515811461047c57600080fd5b60008060008060808587031215610d1257600080fd5b8435610d1d81610c33565b9350602085013592506040850135610d3481610c33565b91506060850135610d4481610cee565b939692955090935050565b600060208284031215610d6157600080fd5b8135610d6c81610c33565b9392505050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215610dc257600080fd5b8151610d6c81610cee565b60005b83811015610de8578181015183820152602001610dd0565b50506000910152565b60008151808452610e09816020860160208601610dcd565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090610e4190830184610df1565b949350505050565b6020808252601690820152752130b7359d1034b73b30b634b2103932b1b2b4bb32b960511b604082015260600190565b600060208284031215610e8b57600080fd5b5051919050565b602081526000610d6c6020830184610df1565b600060208284031215610eb757600080fd5b8151610d6c81610c33565b60008251610ed4818460208701610dcd565b919091019291505056fea2646970667358221220e388034b0b19b2825e7f8bed9831abec9ed339242c3e0cd8c5fe0dcf4fd8456664736f6c63430008100033";

type FeeReceiverConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: FeeReceiverConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class FeeReceiver__factory extends ContractFactory {
  constructor(...args: FeeReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeReceiver> {
    return super.deploy(_roleStore, _dataStore, overrides || {}) as Promise<FeeReceiver>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override attach(address: string): FeeReceiver {
    return super.attach(address) as FeeReceiver;
  }
  override connect(signer: Signer): FeeReceiver__factory {
    return super.connect(signer) as FeeReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeReceiverInterface {
    return new utils.Interface(_abi) as FeeReceiverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FeeReceiver {
    return new Contract(address, _abi, signerOrProvider) as FeeReceiver;
  }
}
