/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { PositionStore, PositionStoreInterface } from "../../../contracts/position/PositionStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NativeTokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "get",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "longTokenFundingAmountPerSize",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "shortTokenFundingAmountPerSize",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "increasedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtBlock",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Position.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountPositionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountPositionKeys",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPositionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getPositionKeys",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recordTransferIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "longTokenFundingAmountPerSize",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "shortTokenFundingAmountPerSize",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "increasedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtBlock",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Position.Props",
        name: "position",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldUnwrapNativeToken",
        type: "bool",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001f7438038062001f748339810160408190526200003491620000e0565b81818181818181620000463362000066565b6001600160a01b039081166080521660a052506200011f95505050505050565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b0381168114620000dd57600080fd5b50565b60008060408385031215620000f457600080fd5b82516200010181620000c7565b60208401519092506200011481620000c7565b809150509250929050565b60805160a051611e0c62000168600039600081816102470152818161060c0152818161067501528181610a000152610e340152600081816101e601526109160152611e0c6000f3fe6080604052600436106100d25760003560e01c806312d43a51146100de57806319890c48146101145780631d1a696d146101365780632874528e146101665780632d891fba14610186578063352f9aed146101a65780634a4a7b04146101d4578063523fba7f14610208578063660d0d67146102355780636bd3d451146102695780637f497d971461028957806381683476146102b657806388d44f41146102cb5780638c5ea9b8146102eb5780638eaa6ac01461030b578063cfad57a214610338578063e52764451461035857600080fd5b366100d957005b600080fd5b3480156100ea57600080fd5b506000546100fe906001600160a01b031681565b60405161010b919061153c565b60405180910390f35b34801561012057600080fd5b5061013461012f36600461173b565b610378565b005b34801561014257600080fd5b50610156610151366004611843565b6104da565b604051901515815260200161010b565b34801561017257600080fd5b5061013461018136600461185c565b6104ed565b34801561019257600080fd5b506101346101a136600461188c565b6105bb565b3480156101b257600080fd5b506101c66101c13660046118ce565b6105d8565b60405190815260200161010b565b3480156101e057600080fd5b506100fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561021457600080fd5b506101c66102233660046118ce565b60016020526000908152604090205481565b34801561024157600080fd5b506100fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b506101346102843660046118eb565b6105f5565b34801561029557600080fd5b506102a96102a4366004611917565b610636565b60405161010b9190611939565b3480156102c257600080fd5b506101c661064b565b3480156102d757600080fd5b506101346102e636600461197d565b61065c565b3480156102f757600080fd5b506102a96103063660046119d0565b6106e0565b34801561031757600080fd5b5061032b610326366004611843565b61070e565b60405161010b9190611a55565b34801561034457600080fd5b506101346103533660046118ce565b610884565b34801561036457600080fd5b506101c66103733660046118ce565b6108de565b6103c860405160200161038a90611b0e565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b8152506108ff565b6000838152600260208181526040928390208451805182546001600160a01b03199081166001600160a01b03928316178455828501516001850180548316918416919091179055918601519483018054909216941693909317909255838101518051600384015590810151600483015580830151600583015560608082015160068401556080820151600784015560a0820151600884015560c0820151600984015560e090910151600a8301559183015151600b8201805460ff191691151591909117905590820151829190600c8201906104a39082611bba565b5050506001600160a01b03821660009081526005602052604090206104c890846109af565b506104d46003846109af565b50505050565b60006104e76003836109bb565b92915050565b6104ff60405160200161038a90611b0e565b6000828152600260208190526040822080546001600160a01b0319908116825560018201805482169055918101805490921690915560038101829055600481018290556005810182905560068101829055600781018290556008810182905560098101829055600a8101829055600b8101805460ff1916905590610586600c83018261145b565b50506001600160a01b03811660009081526005602052604090206105aa90836109c7565b506105b66003836109c7565b505050565b6105cd60405160200161038a90611b0e565b6105b68383836109d3565b60006105ec60405160200161038a90611b0e565b6104e782610a30565b61060760405160200161038a90611b0e565b6106327f00000000000000000000000000000000000000000000000000000000000000008383610ad9565b5050565b606061064460038484610c90565b9392505050565b60006106576003610d50565b905090565b61066e60405160200161038a90611b0e565b60006106997f0000000000000000000000000000000000000000000000000000000000000000610d5a565b9050806001600160a01b0316856001600160a01b03161480156106b95750815b156106ce576106c9858585610e07565b6106d9565b6106d98585856109d3565b5050505050565b6001600160a01b0383166000908152600560205260409020606090610706908484610c90565b949350505050565b610716611495565b600082815260026020818152604092839020835160e0808201865282546001600160a01b0390811660808085019182526001860154831660a0808701919091529786015490921660c080860191909152908452875161010081018952600386015481526004860154818801526005860154818a01526006860154606082810191909152600787015493820193909352600886015497810197909752600985015490870152600a840154918601919091528184019490945284519283018552600b82015460ff161515835293840191909152600c8101805491928401916107fb90611b32565b80601f016020809104026020016040519081016040528092919081815260200182805461082790611b32565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031633146108d2576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b6108db81610e5b565b50565b6001600160a01b03811660009081526005602052604081206104e790610d50565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb9061094d9033908690600401611c79565b602060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190611c92565b61063257338160405163a35b150b60e01b81526004016108c9929190611caf565b60006106448383610ebc565b60006106448383610f06565b60006106448383610f1e565b306001600160a01b038216036109fb5760405162461bcd60e51b81526004016108c990611cd3565b610a277f0000000000000000000000000000000000000000000000000000000000000000848385611011565b6105b683611141565b6001600160a01b0381166000818152600160205260408082205490516370a0823160e01b8152919290918391906370a0823190610a7190309060040161153c565b602060405180830381865afa158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab29190611d03565b6001600160a01b038516600090815260016020526040902081905590506107068282611d32565b80600003610ae657505050565b6000836001600160a01b031663bd02d0f5604051602001610b38906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610b6c91815260200190565b602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190611d03565b9050600080846001600160a01b0316848490604051600060405180830381858888f193505050503d8060008114610c00576040519150601f19603f3d011682016040523d82523d6000602084013e610c05565b606091505b50915091508115610c1857505050505050565b600081604051602001610c2b9190611d45565b60405160208183030381529060405290507f6c4e9d88878940a822d239187b8b00d62a80dce222d53bc5f1fb072d9c34b68181604051610c6b9190611d45565b60405180910390a18585604051633828654560e11b81526004016108c9929190611c79565b60606000610c9d85610d50565b905080831115610cab578092505b6000610cb78585611d32565b6001600160401b03811115610cce57610cce611565565b604051908082528060200260200182016040528015610cf7578160200160208202803683370190505b509050845b84811015610d4657610d0e87826111ca565b82610d198884611d32565b81518110610d2957610d29611d58565b602090810291909101015280610d3e81611d6e565b915050610cfc565b5095945050505050565b60006104e7825490565b6000816001600160a01b03166321f8a721604051602001610d929060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610dc691815260200190565b602060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e79190611d87565b306001600160a01b03821603610e2f5760405162461bcd60e51b81526004016108c990611cd3565b610a277f00000000000000000000000000000000000000000000000000000000000000008483856111d6565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6000610ec88383610f06565b610efe575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104e7565b5060006104e7565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611007576000610f42600183611d32565b8554909150600090610f5690600190611d32565b9050818114610fbb576000866000018281548110610f7657610f76611d58565b9060005260206000200154905080876000018481548110610f9957610f99611d58565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610fcc57610fcc611da4565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104e7565b60009150506104e7565b80156104d4576000846001600160a01b031663bd02d0f561103186611241565b6040518263ffffffff1660e01b815260040161104f91815260200190565b602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110909190611d03565b90506000806110a1868686866112c9565b9150915081156110b3575050506104d4565b6000816040516020016110c69190611d45565b60405160208183030381529060405290507f9db60cdf21cde7f760995e23662841725e6aa63be48799796db12b7b2e6b17e2816040516111069190611d45565b60405180910390a160405163012f3b8f60e71b81526001600160a01b03808916600483015287166024820152604481018690526064016108c9565b6040516370a0823160e01b81526001600160a01b038216906370a082319061116d90309060040161153c565b602060405180830381865afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae9190611d03565b6001600160a01b03909116600090815260016020526040902055565b60006106448383611431565b80156104d457604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b15801561121e57600080fd5b505af1158015611232573d6000803e3d6000fd5b505050506104d4848383610ad9565b600060405160200161127f906020808252601890820152771513d2d15397d514905394d1915497d1d054d7d31253525560421b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b60006060600063a9059cbb60e01b86866040516024016112ea929190611c79565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080886001600160a01b0316868460405161133b9190611dba565b60006040518083038160008787f1925050503d8060008114611379576040519150601f19603f3d011682016040523d82523d6000602084013e61137e565b606091505b5091509150811561141f5780516000036113dc576001600160a01b0389163b6113dc5760006040518060400160405280601481526020017310d85b1b081d1bc81b9bdb8b58dbdb9d1c9858dd60621b81525094509450505050611428565b600081511180156113fe5750808060200190518101906113fc9190611c92565b155b1561141157600094509250611428915050565b600194509250611428915050565b60009450925050505b94509492505050565b600082600001828154811061144857611448611d58565b9060005260206000200154905092915050565b50805461146790611b32565b6000825580601f10611477575050565b601f0160209004906000526020600020908101906108db9190611523565b6040805160e0810190915260006080820181815260a0830182905260c08301919091528190815260200161150760405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020808201835260008252830152606091015290565b5b808211156115385760008155600101611524565b5090565b6001600160a01b0391909116815260200190565b6001600160a01b03811681146108db57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561159d5761159d611565565b60405290565b604051606081016001600160401b038111828210171561159d5761159d611565565b60006101008083850312156115d957600080fd5b604051908101906001600160401b03821181831017156115fb576115fb611565565b81604052809250833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152505092915050565b80151581146108db57600080fd5b60006020828403121561167457600080fd5b604051602081016001600160401b038111828210171561169657611696611565565b60405290508082356116a781611654565b905292915050565b600082601f8301126116c057600080fd5b81356001600160401b03808211156116da576116da611565565b604051601f8301601f19908116603f0116810190828211818310171561170257611702611565565b8160405283815286602085880101111561171b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561175057600080fd5b83359250602084013561176281611550565b915060408401356001600160401b038082111561177e57600080fd5b908501908187036101a081121561179457600080fd5b61179c61157b565b60608212156117aa57600080fd5b6117b26115a3565b915083356117bf81611550565b825260208401356117cf81611550565b602083015260408401356117e281611550565b60408301528181526117f789606086016115c5565b602082015261180a896101608601611662565b604082015261018084013591508282111561182457600080fd5b611830898386016116af565b6060820152809450505050509250925092565b60006020828403121561185557600080fd5b5035919050565b6000806040838503121561186f57600080fd5b82359150602083013561188181611550565b809150509250929050565b6000806000606084860312156118a157600080fd5b83356118ac81611550565b92506020840135915060408401356118c381611550565b809150509250925092565b6000602082840312156118e057600080fd5b813561064481611550565b600080604083850312156118fe57600080fd5b823561190981611550565b946020939093013593505050565b6000806040838503121561192a57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561197157835183529284019291840191600101611955565b50909695505050505050565b6000806000806080858703121561199357600080fd5b843561199e81611550565b93506020850135925060408501356119b581611550565b915060608501356119c581611654565b939692955090935050565b6000806000606084860312156119e557600080fd5b83356119f081611550565b95602085013595506040909401359392505050565b60005b83811015611a20578181015183820152602001611a08565b50506000910152565b60008151808452611a41816020860160208601611a05565b601f01601f19169290920160200192915050565b602081526000825160018060a01b038082511660208501528060208301511660408501528060408301511660608501525050602083015180516080840152602081015160a0840152604081015160c0840152606081015160e0840152608081015161010084015260a081015161012084015260c081015161014084015260e0810151610160840152506040830151611af36101808401825115159052565b5060608301516101a0838101526107066101c0840182611a29565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b600181811c90821680611b4657607f821691505b602082108103611b6657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105b657600081815260208120601f850160051c81016020861015611b935750805b601f850160051c820191505b81811015611bb257828155600101611b9f565b505050505050565b81516001600160401b03811115611bd357611bd3611565565b611be781611be18454611b32565b84611b6c565b602080601f831160018114611c1c5760008415611c045750858301515b600019600386901b1c1916600185901b178555611bb2565b600085815260208120601f198616915b82811015611c4b57888601518255948401946001909101908401611c2c565b5085821015611c695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03929092168252602082015260400190565b600060208284031215611ca457600080fd5b815161064481611654565b6001600160a01b038316815260406020820181905260009061070690830184611a29565b6020808252601690820152752130b7359d1034b73b30b634b2103932b1b2b4bb32b960511b604082015260600190565b600060208284031215611d1557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104e7576104e7611d1c565b6020815260006106446020830184611a29565b634e487b7160e01b600052603260045260246000fd5b600060018201611d8057611d80611d1c565b5060010190565b600060208284031215611d9957600080fd5b815161064481611550565b634e487b7160e01b600052603160045260246000fd5b60008251611dcc818460208701611a05565b919091019291505056fea2646970667358221220b07105f5440896ace94feede7a857ff3e99db3b569ede1079db8c6db4edd4df464736f6c63430008100033";

type PositionStoreConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: PositionStoreConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class PositionStore__factory extends ContractFactory {
  constructor(...args: PositionStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PositionStore> {
    return super.deploy(_roleStore, _dataStore, overrides || {}) as Promise<PositionStore>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override attach(address: string): PositionStore {
    return super.attach(address) as PositionStore;
  }
  override connect(signer: Signer): PositionStore__factory {
    return super.connect(signer) as PositionStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionStoreInterface {
    return new utils.Interface(_abi) as PositionStoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PositionStore {
    return new Contract(address, _abi, signerOrProvider) as PositionStore;
  }
}
