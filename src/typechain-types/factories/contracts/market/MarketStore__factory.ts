/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MarketStore, MarketStoreInterface } from "../../../contracts/market/MarketStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NativeTokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketToken",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketToken",
        type: "address",
      },
    ],
    name: "get",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarketKeys",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recordTransferIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketToken",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldUnwrapNativeToken",
        type: "bool",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001b3b38038062001b3b8339810160408190526200003491620000e0565b81818181818181620000463362000066565b6001600160a01b039081166080521660a052506200011f95505050505050565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b0381168114620000dd57600080fd5b50565b60008060408385031215620000f457600080fd5b82516200010181620000c7565b60208401519092506200011481620000c7565b809150509250929050565b60805160a0516119d3620001686000396000818161023e0152818161045501528181610494015281816108f70152610c7e0152600081816101ad015261081c01526119d36000f3fe6080604052600436106100bc5760003560e01c806301ab3988146100c857806312d43a51146100fe57806329092d0e1461012b5780632d891fba1461014d578063352f9aed1461016d5780634a4a7b041461019b578063523fba7f146101cf5780635dbe47e8146101fc578063660d0d671461022c5780636bd3d4511461026057806388d44f4114610280578063c2bc2efc146102a0578063cfad57a2146102cd578063e0ad6632146102ed578063fd69f3c21461030d57600080fd5b366100c357005b600080fd5b3480156100d457600080fd5b506100e86100e3366004611318565b610322565b6040516100f5919061133a565b60405180910390f35b34801561010a57600080fd5b5060005461011e906001600160a01b031681565b6040516100f59190611387565b34801561013757600080fd5b5061014b6101463660046113b0565b610339565b005b34801561015957600080fd5b5061014b6101683660046113d4565b6103f2565b34801561017957600080fd5b5061018d6101883660046113b0565b610414565b6040519081526020016100f5565b3480156101a757600080fd5b5061011e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101db57600080fd5b5061018d6101ea3660046113b0565b60016020526000908152604090205481565b34801561020857600080fd5b5061021c6102173660046113b0565b610431565b60405190151581526020016100f5565b34801561023857600080fd5b5061011e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026c57600080fd5b5061014b61027b366004611416565b61043e565b34801561028c57600080fd5b5061014b61029b366004611450565b61047b565b3480156102ac57600080fd5b506102c06102bb3660046113b0565b6104ff565b6040516100f591906114f3565b3480156102d957600080fd5b5061014b6102e83660046113b0565b610620565b3480156102f957600080fd5b5061014b6103083660046115b4565b61067a565b34801561031957600080fd5b5061018d610727565b606061033060038484610738565b90505b92915050565b61038960405160200161034b906116d5565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610805565b6001600160a01b0381166000908152600260208190526040822080546001600160a01b0319908116825560018201805482169055918101805483169055600381018054909216909155906103e060048301826112ca565b506103ee90506003826108b5565b5050565b61040460405160200161034b906116d5565b61040f8383836108ca565b505050565b600061042860405160200161034b906116d5565b61033382610927565b60006103336003836109d8565b61045060405160200161034b906116d5565b6103ee7f000000000000000000000000000000000000000000000000000000000000000083836109ed565b61048d60405160200161034b906116d5565b60006104b87f0000000000000000000000000000000000000000000000000000000000000000610ba4565b9050806001600160a01b0316856001600160a01b03161480156104d85750815b156104ed576104e8858585610c51565b6104f8565b6104f88585856108ca565b5050505050565b6040805160a08101825260008082526020820181905291810182905260608082019290925260808101919091526001600160a01b03808316600090815260026020818152604092839020835160a08101855281548616815260018201548616928101929092529182015484169281019290925260038101549092166060820152600482018054919291608084019190610597906116f9565b80601f01602080910402602001604051908101604052809291908181526020018280546105c3906116f9565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050815250509050919050565b6000546001600160a01b0316331461066e576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b61067781610ca5565b50565b61068c60405160200161034b906116d5565b6001600160a01b03808316600090815260026020818152604092839020855181549086166001600160a01b03199182161782559186015160018201805491871691841691909117905592850151918301805492851692821692909217909155606084015160038301805491909416911617909155608082015182919060048201906107179082611781565b5061040f91506003905083610d06565b60006107336003610d1b565b905090565b6060600061074585610d1b565b905080831115610753578092505b600061075f8585611856565b6001600160401b0381111561077657610776611546565b60405190808252806020026020018201604052801561079f578160200160208202803683370190505b509050845b848110156107fb576107b68782610d25565b826107c18884611856565b815181106107d1576107d1611869565b6001600160a01b0390921660209283029190910190910152806107f38161187f565b9150506107a4565b5095945050505050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906108539033908690600401611898565b602060405180830381865afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089491906118b1565b6103ee57338160405163a35b150b60e01b81526004016106659291906118ce565b6000610330836001600160a01b038416610d31565b306001600160a01b038216036108f25760405162461bcd60e51b8152600401610665906118f2565b61091e7f0000000000000000000000000000000000000000000000000000000000000000848385610e24565b61040f83610f5a565b6001600160a01b0381166000818152600160205260408082205490516370a0823160e01b8152919290918391906370a0823190610968903090600401611387565b602060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190611922565b6001600160a01b038516600090815260016020526040902081905590506109d08282611856565b949350505050565b6000610330836001600160a01b038416610fe3565b806000036109fa57505050565b6000836001600160a01b031663bd02d0f5604051602001610a4c906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610a8091815260200190565b602060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190611922565b9050600080846001600160a01b0316848490604051600060405180830381858888f193505050503d8060008114610b14576040519150601f19603f3d011682016040523d82523d6000602084013e610b19565b606091505b50915091508115610b2c57505050505050565b600081604051602001610b3f919061193b565b60405160208183030381529060405290507f6c4e9d88878940a822d239187b8b00d62a80dce222d53bc5f1fb072d9c34b68181604051610b7f919061193b565b60405180910390a18585604051633828654560e11b8152600401610665929190611898565b6000816001600160a01b03166321f8a721604051602001610bdc9060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610c1091815260200190565b602060405180830381865afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610333919061194e565b306001600160a01b03821603610c795760405162461bcd60e51b8152600401610665906118f2565b61091e7f0000000000000000000000000000000000000000000000000000000000000000848385610ffb565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6000610330836001600160a01b038416611066565b6000610333825490565b600061033083836110b0565b60008181526001830160205260408120548015610e1a576000610d55600183611856565b8554909150600090610d6990600190611856565b9050818114610dce576000866000018281548110610d8957610d89611869565b9060005260206000200154905080876000018481548110610dac57610dac611869565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610ddf57610ddf61196b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610333565b6000915050610333565b8015610f54576000846001600160a01b031663bd02d0f5610e44866110da565b6040518263ffffffff1660e01b8152600401610e6291815260200190565b602060405180830381865afa158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190611922565b9050600080610eb486868686611162565b915091508115610ec657505050610f54565b600081604051602001610ed9919061193b565b60405160208183030381529060405290507f9db60cdf21cde7f760995e23662841725e6aa63be48799796db12b7b2e6b17e281604051610f19919061193b565b60405180910390a160405163012f3b8f60e71b81526001600160a01b0380891660048301528716602482015260448101869052606401610665565b50505050565b6040516370a0823160e01b81526001600160a01b038216906370a0823190610f86903090600401611387565b602060405180830381865afa158015610fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc79190611922565b6001600160a01b03909116600090815260016020526040902055565b60009081526001919091016020526040902054151590565b8015610f5457604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b15801561104357600080fd5b505af1158015611057573d6000803e3d6000fd5b50505050610f548483836109ed565b60006110728383610fe3565b6110a857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610333565b506000610333565b60008260000182815481106110c7576110c7611869565b9060005260206000200154905092915050565b6000604051602001611118906020808252601890820152771513d2d15397d514905394d1915497d1d054d7d31253525560421b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b60006060600063a9059cbb60e01b8686604051602401611183929190611898565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080886001600160a01b031686846040516111d49190611981565b60006040518083038160008787f1925050503d8060008114611212576040519150601f19603f3d011682016040523d82523d6000602084013e611217565b606091505b509150915081156112b8578051600003611275576001600160a01b0389163b6112755760006040518060400160405280601481526020017310d85b1b081d1bc81b9bdb8b58dbdb9d1c9858dd60621b815250945094505050506112c1565b6000815111801561129757508080602001905181019061129591906118b1565b155b156112aa576000945092506112c1915050565b6001945092506112c1915050565b60009450925050505b94509492505050565b5080546112d6906116f9565b6000825580601f106112e6575050565b601f01602090049060005260206000209081019061067791905b808211156113145760008155600101611300565b5090565b6000806040838503121561132b57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561137b5783516001600160a01b031683529284019291840191600101611356565b50909695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461067757600080fd5b6000602082840312156113c257600080fd5b81356113cd8161139b565b9392505050565b6000806000606084860312156113e957600080fd5b83356113f48161139b565b925060208401359150604084013561140b8161139b565b809150509250925092565b6000806040838503121561142957600080fd5b82356114348161139b565b946020939093013593505050565b801515811461067757600080fd5b6000806000806080858703121561146657600080fd5b84356114718161139b565b93506020850135925060408501356114888161139b565b9150606085013561149881611442565b939692955090935050565b60005b838110156114be5781810151838201526020016114a6565b50506000910152565b600081518084526114df8160208601602086016114a3565b601f01601f19169290920160200192915050565b60208152600060018060a01b0380845116602084015280602085015116604084015280604085015116606084015280606085015116608084015250608083015160a0808401526109d060c08401826114c7565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561157e5761157e611546565b60405290565b604051601f8201601f191681016001600160401b03811182821017156115ac576115ac611546565b604052919050565b600080604083850312156115c757600080fd5b82356115d28161139b565b91506020838101356001600160401b03808211156115ef57600080fd5b9085019060a0828803121561160357600080fd5b61160b61155c565b82356116168161139b565b8152828401356116258161139b565b8185015260408301356116378161139b565b6040820152606083013561164a8161139b565b606082015260808301358281111561166157600080fd5b80840193505087601f84011261167657600080fd5b82358281111561168857611688611546565b61169a601f8201601f19168601611584565b925080835288858286010111156116b057600080fd5b8085850186850137600085828501015250816080820152809450505050509250929050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b600181811c9082168061170d57607f821691505b60208210810361172d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561040f57600081815260208120601f850160051c8101602086101561175a5750805b601f850160051c820191505b8181101561177957828155600101611766565b505050505050565b81516001600160401b0381111561179a5761179a611546565b6117ae816117a884546116f9565b84611733565b602080601f8311600181146117e357600084156117cb5750858301515b600019600386901b1c1916600185901b178555611779565b600085815260208120601f198616915b82811015611812578886015182559484019460019091019084016117f3565b50858210156118305787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561033357610333611840565b634e487b7160e01b600052603260045260246000fd5b60006001820161189157611891611840565b5060010190565b6001600160a01b03929092168252602082015260400190565b6000602082840312156118c357600080fd5b81516113cd81611442565b6001600160a01b03831681526040602082018190526000906109d0908301846114c7565b6020808252601690820152752130b7359d1034b73b30b634b2103932b1b2b4bb32b960511b604082015260600190565b60006020828403121561193457600080fd5b5051919050565b60208152600061033060208301846114c7565b60006020828403121561196057600080fd5b81516113cd8161139b565b634e487b7160e01b600052603160045260246000fd5b600082516119938184602087016114a3565b919091019291505056fea2646970667358221220a682c9a2f30021142e634d7637f51c4d36d451176ec1fceeda38e3ae8c26735864736f6c63430008100033";

type MarketStoreConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MarketStoreConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MarketStore__factory extends ContractFactory {
  constructor(...args: MarketStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketStore> {
    return super.deploy(_roleStore, _dataStore, overrides || {}) as Promise<MarketStore>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override attach(address: string): MarketStore {
    return super.attach(address) as MarketStore;
  }
  override connect(signer: Signer): MarketStore__factory {
    return super.connect(signer) as MarketStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketStoreInterface {
    return new utils.Interface(_abi) as MarketStoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MarketStore {
    return new Contract(address, _abi, signerOrProvider) as MarketStore;
  }
}
