/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { StakeHandler, StakeHandlerInterface } from "../../../contracts/exchange/StakeHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositHandler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_withdrawalHandler",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "contract LockedToken",
        name: "_lockedToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "",
        type: "tuple",
      },
    ],
    name: "afterDepositCancellation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "afterDepositExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketTokensLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marketTokensShortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    name: "afterWithdrawalCancellation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketTokensLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marketTokensShortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    name: "afterWithdrawalExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "",
        type: "tuple",
      },
    ],
    name: "beforeDepositExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketTokensLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marketTokensShortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAtBlock",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "beforeWithdrawalExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositHandler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedToken",
    outputs: [
      {
        internalType: "contract LockedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalHandler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610df7380380610df78339810160408190526100309161006f565b60016000556001600160a01b0393841660805291831660a052821660c0521660e0526100ce565b6001600160a01b038116811461006c57600080fd5b50565b6000806000806080858703121561008557600080fd5b845161009081610057565b60208601519094506100a181610057565b60408601519093506100b281610057565b60608601519092506100c381610057565b939692955090935050565b60805160a05160c05160e051610cb36101446000396000818160ac0152818161023a015281816102ef0152818161048701526104c501526000818161016b015281816102b8015281816103e0015261046501526000818160fc015261019801526000818161012301526103630152610cb36000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c8063076dcf77146100935780630f45cc81146100a757806310475915146100e45780631181f0af146100935780632c2f3c07146100f75780639c8b2cfb1461011e578063b01c23ba14610145578063b36a1d4314610153578063c89039c514610166578063f79e3de314610145575b600080fd5b6100a56100a136600461090d565b5050565b005b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100db9190610a28565b60405180910390f35b6100a56100f236600461090d565b61018d565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b6100a56100a1366004610a3c565b6100a5610161366004610a3c565b610358565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101de5760405162461bcd60e51b81526004016101d590610b2c565b60405180910390fd5b6002600054036102005760405162461bcd60e51b81526004016101d590610b5d565b60026000908155815160a083015160808401519192916102209190610b94565b604051632770a7eb60e21b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac906102719085908590600401610bbb565b600060405180830381600087803b15801561028b57600080fd5b505af115801561029f573d6000803e3d6000fd5b50506040516316c48fdd60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820185905285811660448301527f0000000000000000000000000000000000000000000000000000000000000000169250632d891fba9150606401600060405180830381600087803b15801561033557600080fd5b505af1158015610349573d6000803e3d6000fd5b50506001600055505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a05760405162461bcd60e51b81526004016101d590610b2c565b6002600054036103c25760405162461bcd60e51b81526004016101d590610b5d565b600260009081556040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610415903090600401610a28565b602060405180830381865afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190610bd4565b90506104ac6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610537565b81516040516340c10f1960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916340c10f19916104fb91908590600401610bbb565b600060405180830381600087803b15801561051557600080fd5b505af1158015610529573d6000803e3d6000fd5b505060016000555050505050565b61058d8363a9059cbb60e01b8484604051602401610556929190610bbb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610592565b505050565b60006105e7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106649092919063ffffffff16565b80519091501561058d57808060200190518101906106059190610bed565b61058d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d5565b6060610673848460008561067d565b90505b9392505050565b6060824710156106de5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d5565b6001600160a01b0385163b6107355760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d5565b600080866001600160a01b031685876040516107519190610c2e565b60006040518083038185875af1925050503d806000811461078e576040519150601f19603f3d011682016040523d82523d6000602084013e610793565b606091505b50915091506107a38282866107ae565b979650505050505050565b606083156107bd575081610676565b8251156107cd5782518084602001fd5b8160405162461bcd60e51b81526004016101d59190610c4a565b634e487b7160e01b600052604160045260246000fd5b6040516101a081016001600160401b0381118282101715610820576108206107e7565b60405290565b60405161018081016001600160401b0381118282101715610820576108206107e7565b80356001600160a01b038116811461086057600080fd5b919050565b801515811461087357600080fd5b50565b803561086081610865565b600082601f83011261089257600080fd5b81356001600160401b03808211156108ac576108ac6107e7565b604051601f8301601f19908116603f011681019082821181831017156108d4576108d46107e7565b816040528381528660208588010111156108ed57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561092057600080fd5b8235915060208301356001600160401b038082111561093e57600080fd5b908401906101a0828703121561095357600080fd5b61095b6107fd565b61096483610849565b815261097260208401610849565b602082015261098360408401610849565b604082015261099460608401610849565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152506101206109db818501610876565b90820152610140838101359082015261016080840135908201526101808084013583811115610a0957600080fd5b610a1589828701610881565b8284015250508093505050509250929050565b6001600160a01b0391909116815260200190565b60008060408385031215610a4f57600080fd5b8235915060208301356001600160401b0380821115610a6d57600080fd5b908401906101808287031215610a8257600080fd5b610a8a610826565b610a9383610849565b8152610aa160208401610849565b6020820152610ab260408401610849565b6040820152610ac360608401610849565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100610afe818501610876565b90820152610120838101359082015261014080840135908201526101608084013583811115610a0957600080fd5b60208082526017908201527629ba30b5b2a430b7323632b91d102337b93134b23232b760491b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b80820180821115610bb557634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03929092168252602082015260400190565b600060208284031215610be657600080fd5b5051919050565b600060208284031215610bff57600080fd5b815161067681610865565b60005b83811015610c25578181015183820152602001610c0d565b50506000910152565b60008251610c40818460208701610c0a565b9190910192915050565b6020815260008251806020840152610c69816040850160208701610c0a565b601f01601f1916919091016040019291505056fea2646970667358221220484a49e1eab1c4dc75b0feff34b19534860c9558cb4b50fbe7dc9c2c87223f3264736f6c63430008100033";

type StakeHandlerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: StakeHandlerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class StakeHandler__factory extends ContractFactory {
  constructor(...args: StakeHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _depositHandler: PromiseOrValue<string>,
    _withdrawalHandler: PromiseOrValue<string>,
    _depositToken: PromiseOrValue<string>,
    _lockedToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakeHandler> {
    return super.deploy(
      _depositHandler,
      _withdrawalHandler,
      _depositToken,
      _lockedToken,
      overrides || {}
    ) as Promise<StakeHandler>;
  }
  override getDeployTransaction(
    _depositHandler: PromiseOrValue<string>,
    _withdrawalHandler: PromiseOrValue<string>,
    _depositToken: PromiseOrValue<string>,
    _lockedToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositHandler,
      _withdrawalHandler,
      _depositToken,
      _lockedToken,
      overrides || {}
    );
  }
  override attach(address: string): StakeHandler {
    return super.attach(address) as StakeHandler;
  }
  override connect(signer: Signer): StakeHandler__factory {
    return super.connect(signer) as StakeHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeHandlerInterface {
    return new utils.Interface(_abi) as StakeHandlerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StakeHandler {
    return new Contract(address, _abi, signerOrProvider) as StakeHandler;
  }
}
