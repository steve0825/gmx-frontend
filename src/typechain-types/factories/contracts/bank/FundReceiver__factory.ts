/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { FundReceiver, FundReceiverInterface } from "../../../contracts/bank/FundReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NativeTokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161076a38038061076a83398101604081905261002f916100ca565b8161003933610051565b6001600160a01b039081166080521660a05250610104565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b03811681146100c757600080fd5b50565b600080604083850312156100dd57600080fd5b82516100e8816100b2565b60208401519092506100f9816100b2565b809150509250929050565b60805160a0516106356101356000396000818160b701526101750152600081816090015261021001526106356000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806312d43a511461005c5780634a4a7b041461008b578063660d0d67146100b25780636bd3d451146100d9578063cfad57a2146100ee575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006f7f000000000000000000000000000000000000000000000000000000000000000081565b61006f7f000000000000000000000000000000000000000000000000000000000000000081565b6100ec6100e73660046104d6565b610101565b005b6100ec6100fc366004610502565b61019f565b610170604051602001610132906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b8152506101f9565b61019b7f000000000000000000000000000000000000000000000000000000000000000083836102a9565b5050565b6000546001600160a01b031633146101ed576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b6101f681610460565b50565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906102479033908690600401610526565b602060405180830381865afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610288919061053f565b61019b57338160405163a35b150b60e01b81526004016101e49291906105a7565b806000036102b657505050565b6000836001600160a01b031663bd02d0f5604051602001610308906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161033c91815260200190565b602060405180830381865afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d91906105d3565b9050600080846001600160a01b0316848490604051600060405180830381858888f193505050503d80600081146103d0576040519150601f19603f3d011682016040523d82523d6000602084013e6103d5565b606091505b509150915081156103e857505050505050565b6000816040516020016103fb91906105ec565b60405160208183030381529060405290507f6c4e9d88878940a822d239187b8b00d62a80dce222d53bc5f1fb072d9c34b6818160405161043b91906105ec565b60405180910390a18585604051633828654560e11b81526004016101e4929190610526565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b03811681146101f657600080fd5b600080604083850312156104e957600080fd5b82356104f4816104c1565b946020939093013593505050565b60006020828403121561051457600080fd5b813561051f816104c1565b9392505050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561055157600080fd5b8151801515811461051f57600080fd5b6000815180845260005b818110156105875760208185018101518683018201520161056b565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03831681526040602082018190526000906105cb90830184610561565b949350505050565b6000602082840312156105e557600080fd5b5051919050565b60208152600061051f602083018461056156fea26469706673582212202da678348bd3addf3334e600f3fee2e1aa026d773241131a286296902e4d054364736f6c63430008100033";

type FundReceiverConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: FundReceiverConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class FundReceiver__factory extends ContractFactory {
  constructor(...args: FundReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundReceiver> {
    return super.deploy(_roleStore, _dataStore, overrides || {}) as Promise<FundReceiver>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override attach(address: string): FundReceiver {
    return super.attach(address) as FundReceiver;
  }
  override connect(signer: Signer): FundReceiver__factory {
    return super.connect(signer) as FundReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundReceiverInterface {
    return new utils.Interface(_abi) as FundReceiverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundReceiver {
    return new Contract(address, _abi, signerOrProvider) as FundReceiver;
  }
}
