/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { OracleStore, OracleStoreInterface } from "../../../contracts/oracle/OracleStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getSigners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161097538038061097583398101604081905261002f916100ac565b806100393361004b565b6001600160a01b0316608052506100dc565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6000602082840312156100be57600080fd5b81516001600160a01b03811681146100d557600080fd5b9392505050565b6080516108786100fd6000396000818160d301526102e301526108786000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630e316ab71461007d57806312d43a51146100925780633ffefe4e146100bb5780634a4a7b04146100ce578063b715be81146100f5578063cfad57a21461010b578063daf6faa61461011e578063eb12d61e1461013e575b600080fd5b61009061008b366004610655565b610151565b005b6000546100a5906001600160a01b031681565b6040516100b2919061067e565b60405180910390f35b6100a56100c9366004610692565b6101e7565b6100a57f000000000000000000000000000000000000000000000000000000000000000081565b6100fd6101fa565b6040519081526020016100b2565b610090610119366004610655565b61020b565b61013161012c3660046106ab565b610265565b6040516100b291906106cd565b61009061014c366004610655565b61027a565b6101a16040516020016101639061071a565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b8152506102c7565b6101ac60018261037b565b507f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b816040516101dc919061067e565b60405180910390a150565b60006101f4600183610390565b92915050565b6000610206600161039c565b905090565b6000546001600160a01b03163314610259576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b610262816103a6565b50565b606061027360018484610407565b9392505050565b61028c6040516020016101639061071a565b6102976001826104d4565b507f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24816040516101dc919061067e565b60405163ac4ab3fb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ac4ab3fb90604401602060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610356919061073e565b61037757338160405163a35b150b60e01b8152600401610250929190610760565b5050565b6000610273836001600160a01b0384166104e9565b600061027383836105dc565b60006101f4825490565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b606060006104148561039c565b905080831115610422578092505b600061042e85856107d4565b6001600160401b03811115610445576104456107e7565b60405190808252806020026020018201604052801561046e578160200160208202803683370190505b509050845b848110156104ca576104858782610390565b8261049088846107d4565b815181106104a0576104a06107fd565b6001600160a01b0390921660209283029190910190910152806104c281610813565b915050610473565b5095945050505050565b6000610273836001600160a01b038416610606565b600081815260018301602052604081205480156105d257600061050d6001836107d4565b8554909150600090610521906001906107d4565b9050818114610586576000866000018281548110610541576105416107fd565b9060005260206000200154905080876000018481548110610564576105646107fd565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806105975761059761082c565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101f4565b60009150506101f4565b60008260000182815481106105f3576105f36107fd565b9060005260206000200154905092915050565b600081815260018301602052604081205461064d575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101f4565b5060006101f4565b60006020828403121561066757600080fd5b81356001600160a01b038116811461027357600080fd5b6001600160a01b0391909116815260200190565b6000602082840312156106a457600080fd5b5035919050565b600080604083850312156106be57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561070e5783516001600160a01b0316835292840192918401916001016106e9565b50909695505050505050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b60006020828403121561075057600080fd5b8151801515811461027357600080fd5b60018060a01b038316815260006020604081840152835180604085015260005b8181101561079c57858101830151858201606001528201610780565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101f4576101f46107be565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610825576108256107be565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220578a3ea7bcf3e99e8a880cd5d2eb10bc8a03956b04658ea2c8c958567197031964736f6c63430008100033";

type OracleStoreConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: OracleStoreConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class OracleStore__factory extends ContractFactory {
  constructor(...args: OracleStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OracleStore> {
    return super.deploy(_roleStore, overrides || {}) as Promise<OracleStore>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, overrides || {});
  }
  override attach(address: string): OracleStore {
    return super.attach(address) as OracleStore;
  }
  override connect(signer: Signer): OracleStore__factory {
    return super.connect(signer) as OracleStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleStoreInterface {
    return new utils.Interface(_abi) as OracleStoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OracleStore {
    return new Contract(address, _abi, signerOrProvider) as OracleStore;
  }
}
