/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Oracle, OracleInterface } from "../../../contracts/oracle/Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract OracleStore",
        name: "_oracleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevOracleBlockNumber",
        type: "uint256",
      },
    ],
    name: "BlockNumbersNotSorted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signerIndex",
        type: "uint256",
      },
    ],
    name: "DuplicateSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedBlockNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedTimestamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyCustomPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyFeedPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyLatestPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPriceFeedMultiplier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPrimaryPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptySecondaryPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "InvalidBlockNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoveredSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleSigners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxOracleSigners",
        type: "uint256",
      },
    ],
    name: "MaxOracleSigners",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "MaxPriceAgeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevPrice",
        type: "uint256",
      },
    ],
    name: "MaxPricesNotSorted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signerIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSignerIndex",
        type: "uint256",
      },
    ],
    name: "MaxSignerIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleSigners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOracleSigners",
        type: "uint256",
      },
    ],
    name: "MinOracleSigners",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevPrice",
        type: "uint256",
      },
    ],
    name: "MinPricesNotSorted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SIGNERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SIGNER_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNER_INDEX_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clearAllPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "customPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getCustomPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract IPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPriceFeedMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrimaryPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getSecondaryPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getStablePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getTokensWithPrices",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensWithPricesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleStore",
    outputs: [
      {
        internalType: "contract OracleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "primaryPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "secondaryPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "price",
        type: "tuple",
      },
    ],
    name: "setCustomPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "eventEmitter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "signerInfo",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleTimestamps",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedDecimals",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "priceFeedTokens",
            type: "address[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "price",
        type: "tuple",
      },
    ],
    name: "setSecondaryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200317838038062003178833981016040819052620000349162000141565b816200004033620000c7565b6001600160a01b03908116608052600180549183166001600160a01b0319909216919091179055604051620000a3904690602001908152604060208201819052600e908201526d786765742d6f7261636c652d763160901b606082015260800190565b60408051601f19818403018152919052805160209091012060a05250620001809050565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6001600160a01b03811681146200013e57600080fd5b50565b600080604083850312156200015557600080fd5b8251620001628162000128565b6020840151909250620001758162000128565b809150509250929050565b60805160a051612fc4620001b460003960008181610310015261201d0152600081816101e10152610d1b0152612fc46000f3fe608060405234801561001057600080fd5b50600436106101275760003560e01c8062ccf1551461012c57806312d43a511461013657806316345f181461015f5780632986cc431461018d5780633608d9e0146101a0578063392bf7f6146101b35780633b9f9bd2146101c65780634a4a7b04146101dc57806351b5107a1461020357806359ecd657146102235780635dcf71941461022b57806363c9d0561461023e5780637901828d1461027357806383a2aae21461027b57806389fd4d3d1461028e578063968270ce146102a15780639f0514ad146102c8578063a2bbd604146102db578063b74da61d14610302578063ba9a91a51461030b578063cfad57a214610332578063d1358ea914610345578063e3458b7914610358578063e7b918341461036b575b600080fd5b61013461037e565b005b600054610149906001600160a01b031681565b604051610156919061262f565b60405180910390f35b61017261016d366004612658565b61045b565b60408051825181526020928301519281019290925201610156565b61013461019b3660046126e4565b6104fe565b6101346101ae36600461292d565b61053b565b600154610149906001600160a01b031681565b6101ce601081565b604051908152602001610156565b6101497f000000000000000000000000000000000000000000000000000000000000000081565b610216610211366004612b15565b61091f565b6040516101569190612b37565b6101ce610936565b610172610239366004612658565b610952565b61026561024c366004612658565b6005602052600090815260409020805460019091015482565b604051610156929190612b84565b6101ce6109b3565b610172610289366004612658565b6109c4565b61017261029c366004612658565b610a25565b6102656102af366004612658565b6006602052600090815260409020805460019091015482565b6101496102d6366004612b92565b610a86565b6102656102e9366004612658565b6004602052600090815260409020805460019091015482565b6101ce61010081565b6101ce7f000000000000000000000000000000000000000000000000000000000000000081565b610134610340366004612658565b610b55565b6101ce610353366004612b92565b610baa565b6101346103663660046126e4565b610c23565b6101ce610379366004612b92565b610c60565b6103ce60405160200161039090612bcb565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610cff565b60006103da6002610daf565b905060005b818110156104575760006103f4600282610db9565b6001600160a01b038116600090815260046020908152604080832083815560019081018490556005835281842084815581018490556006909252822082815501559050610442600282610dc5565b5050808061044f90612c05565b9150506103df565b5050565b610463612615565b6001600160a01b0382166000818152600460209081526040808320815180830183528154815260019182015481850152948452600583529281902081518083019092528054825290920154908201526104bb81610dda565b6104c6579392505050565b6104cf82610dda565b6104da575092915050565b836040516305346b4b60e41b81526004016104f5919061262f565b60405180910390fd5b61051060405160200161039090612bcb565b6001600160a01b03909116600090815260056020908152604090912082518155910151600190910155565b61054d60405160200161039090612bcb565b6105576002610daf565b156105b05760405162461bcd60e51b8152602060048201526024808201527f4f7261636c653a20746f6b656e7357697468507269636573206e6f7420636c65604482015263185c995960e21b60648201526084016104f5565b8060200151516000036105d657604051631335351b60e31b815260040160405180910390fd5b805160009061ffff166001600160401b038111156105f6576105f6612675565b60405190808252806020026020018201604052801561061f578160200160208202803683370190505b509050836001600160a01b031663bd02d0f560405160200161064090612c1e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161067491815260200190565b602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b59190612c4a565b8151101561076d578051846001600160a01b031663bd02d0f56040516020016106dd90612c1e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161071191815260200190565b602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107529190612c4a565b6040516354f3110960e11b81526004016104f5929190612b84565b600161077c6010610100612c79565b6107869190612c8d565b815111156107c4578051600161079f6010610100612c79565b6107a99190612c8d565b60405163345da1b360e01b81526004016104f5929190612b84565b6000805b82518110156108fb57600061ffff6107e1836010612ca0565b6107ec906010612cbf565b8651901c169050610100811061081b5780610100604051633444aeaf60e21b81526004016104f5929190612b84565b6001811b8381161561084357604051639f4f72e160e01b8152600481018390526024016104f5565b600154604051631fff7f2760e11b815260048101849052948217946001600160a01b0390911690633ffefe4e90602401602060405180830381865afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b49190612cd2565b8584815181106108c6576108c6612cef565b60200260200101906001600160a01b031690816001600160a01b031681525050505080806108f390612c05565b9150506107c8565b5061090885858486610def565b6109188585856101400151611825565b5050505050565b606061092d60028484611ae8565b90505b92915050565b60016109456010610100612c79565b61094f9190612c8d565b81565b61095a612615565b6001600160a01b038216600090815260046020908152604091829020825180840190935280548352600101549082015261099381610dda565b15610930578260405163cd64a02560e01b81526004016104f5919061262f565b60006109bf6002610daf565b905090565b6109cc612615565b6001600160a01b0382166000908152600560209081526040918290208251808401909352805483526001015490820152610a0581610dda565b15610930578260405163158a924160e01b81526004016104f5919061262f565b610a2d612615565b6001600160a01b0382166000908152600660209081526040918290208251808401909352805483526001015490820152610a6681610dda565b156109305782604051634bf444af60e11b81526004016104f5919061262f565b600080836001600160a01b03166321f8a721610aa185611bb5565b6040518263ffffffff1660e01b8152600401610abf91815260200190565b602060405180830381865afa158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190612cd2565b90506001600160a01b03811661092d5760405162461bcd60e51b815260206004820152601a60248201527913dc9858db194e881a5b9d985b1a59081c1c9a58d9481999595960321b60448201526064016104f5565b6000546001600160a01b03163314610b9e576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084016104f5565b610ba781611c30565b50565b6000826001600160a01b031663bd02d0f5610bc484611c8f565b6040518263ffffffff1660e01b8152600401610be291815260200190565b602060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d9190612c4a565b610c3560405160200161039090612bcb565b6001600160a01b03909116600090815260066020908152604090912082518155910151600190910155565b600080836001600160a01b031663bd02d0f5610c7b85611cc1565b6040518263ffffffff1660e01b8152600401610c9991815260200190565b602060405180830381865afa158015610cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda9190612c4a565b90508060000361092d578260405163cc11188560e01b81526004016104f5919061262f565b60405163ac4ab3fb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ac4ab3fb90604401602060405180830381865afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8e9190612d05565b61045757338160405163a35b150b60e01b81526004016104f5929190612d27565b6000610930825490565b600061092d8383611cfc565b600061092d836001600160a01b038416611d26565b80516000901580610930575050602001511590565b610e7a6040805161020081019091526000610100820181815261012083018290526101408301829052610160830182905261018083018290526101a083018290526101c083018290526101e083019190915281908152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081525090565b846001600160a01b031663bd02d0f5604051602001610eca906020808252601e908201527f4d494e5f4f5241434c455f424c4f434b5f434f4e4649524d4154494f4e530000604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610efe91815260200190565b602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190612c4a565b8151526040516001600160a01b0386169063bd02d0f590610f8b906020016020808252601490820152734d41585f4f5241434c455f50524943455f41474560601b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610fbf91815260200190565b602060405180830381865afa158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110009190612c4a565b81516020015260005b82602001515181101561181d57611024836040015182611e19565b82516040015260608301516110399082611e56565b825160600152611047611e93565b825160400151111561107857816000015160400151604051634fa557df60e11b81526004016104f591815260200190565b42825160208101516060909101516110909190612cbf565b10156110b957815160600151604051632bb16b2160e21b815260048101919091526024016104f5565b602082015182516040015110156110f0578151604090810151602084015191516311aeaf6b60e01b81526104f59290600401612b84565b81516040808201516020850152600060809092019190915282518051910151611117611e93565b6111219190612c8d565b1161113c5781516040015161113590611f14565b8251608001525b8260200151818151811061115257611152612cef565b602090810291909101015182516001600160a01b0390911660a090910152608083015161117f9082611f93565b61118a90600a612e69565b825160c00152815160a001516001600160a01b038716906354f6127f906111b090611fac565b6040518263ffffffff1660e01b81526004016111ce91815260200190565b602060405180830381865afa1580156111eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120f9190612c4a565b825160e0015283516001600160401b0381111561122e5761122e612675565b604051908082528060200260200182016040528015611257578160200160208202803683370190505b5060c083015283516001600160401b0381111561127657611276612675565b60405190808252806020026020018201604052801561129f578160200160208202803683370190505b5060e083015260005b84518110156114bd57808551836112bf9190612ca0565b6112c99190612cbf565b6040840181905260a08501516112de91611fdd565b8360c0015182815181106112f4576112f4612cef565b6020026020010181815250506113128460e001518460400151611fdd565b8360e00151828151811061132857611328612cef565b602090810291909101015280156114ab578260c00151818151811061134f5761134f612cef565b60200260200101518360c001516001836113699190612c8d565b8151811061137957611379612cef565b602002602001015111156113f257825160a0015160c08401518051839081106113a4576113a4612cef565b60200260200101518460c001516001846113be9190612c8d565b815181106113ce576113ce612cef565b60200260200101516040516312e64acd60e21b81526004016104f593929190612e75565b8260e00151818151811061140857611408612cef565b60200260200101518360e001516001836114229190612c8d565b8151811061143257611432612cef565b602002602001015111156114ab57825160a0015160e084015180518390811061145d5761145d612cef565b60200260200101518460e001516001846114779190612c8d565b8151811061148757611487612cef565b6020026020010151604051633d4156e560e21b81526004016104f593929190612e75565b806114b581612c05565b9150506112a8565b5060005b84518110156115e157808551836114d89190612ca0565b6114e29190612cbf565b6060840181905260c08501516114f791611f93565b608084015261010084015160608401516115119190611f93565b60a0808501919091528351604081015160608201516080808401519484015160e085015160c095860151958a0151928a015183516115cf98969795969593949293929190811061156357611563612cef565b60200260200101518a60e001518b60a001518151811061158557611585612cef565b60200260200101518c61012001518c60600151815181106115a8576115a8612cef565b60200260200101518e8b815181106115c2576115c2612cef565b6020026020010151612017565b806115d981612c05565b9150506114c1565b506000826000015160c001516115fa8460c001516120fc565b6116049190612ca0565b90506000836000015160c0015161161e8560e001516120fc565b6116289190612ca0565b9050811580611635575080155b1561165a57835160a001516040516303a4d96160e51b81526104f5919060040161262f565b835160a001516001600160a01b0316600090815260046020908152604091829020825180840190935280548352600101549082015261169890610dda565b1561174c57835160a0015160405163c2b7f0e360e01b81526001600160a01b0389169163c2b7f0e3916116d8919086908690600190600090600401612e96565b600060405180830381600087803b1580156116f257600080fd5b505af1158015611706573d6000803e3d6000fd5b50506040805180820182528581526020808201868152895160a001516001600160a01b031660009081526004909252929020905181559051600190910155506117f59050565b835160a0015160405163c2b7f0e360e01b81526001600160a01b0389169163c2b7f0e3916117869190869086906000908190600401612e96565b600060405180830381600087803b1580156117a057600080fd5b505af11580156117b4573d6000803e3d6000fd5b50506040805180820182528581526020808201868152895160a001516001600160a01b03166000908152600590925292902090518155905160019091015550505b835160a00151611807906002906121b1565b505050808061181590612c05565b915050611009565b505050505050565b60005b8151811015611ae257600082828151811061184557611845612cef565b6020026020010151905061189b60046000836001600160a01b03166001600160a01b0316815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050610dda565b6118e35760405162461bcd60e51b815260206004820152601960248201527813dc9858db194e881c1c9a58d948185b1c9958591e481cd95d603a1b60448201526064016104f5565b60006118ef8683610a86565b90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119559190612ee4565b5050509150506000611966826121c6565b905060006119748986610c60565b905068327cb2734119d3b7a9601e1b61198d8284612ca0565b6119979190612c79565b9150816000036119bc5784604051631407006f60e01b81526004016104f5919061262f565b60006119c88a87610baa565b90506119d2612615565b8115611a0f5760405180604001604052808386106119f057836119f2565b855b8152602001838610611a045785611a06565b835b90529050611a27565b60405180604001604052808581526020018581525090505b6001600160a01b03871660009081526004602090815260409091208251815590820151600190910155611a5b6002886121b1565b508051602082015160405163c2b7f0e360e01b81526001600160a01b038d169263c2b7f0e392611a96928c9291906001908190600401612e96565b600060405180830381600087803b158015611ab057600080fd5b505af1158015611ac4573d6000803e3d6000fd5b50505050505050505050508080611ada90612c05565b915050611828565b50505050565b60606000611af585610daf565b905080831115611b03578092505b6000611b0f8585612c8d565b6001600160401b03811115611b2657611b26612675565b604051908082528060200260200182016040528015611b4f578160200160208202803683370190505b509050845b84811015611bab57611b668782610db9565b82611b718884612c8d565b81518110611b8157611b81612cef565b6001600160a01b039092166020928302919091019091015280611ba381612c05565b915050611b54565b5095945050505050565b6000604051602001611be5906020808252600a908201526914149250d157d191515160b21b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038416908201526060015b604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381166001600160a01b03198316179092556040519116907f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f78590611c839083908590612f34565b60405180910390a15050565b6000604051602001611be5906020808252600c908201526b535441424c455f505249434560a01b604082015260600190565b6000604051602001611be590602080825260159082015274282924a1a2afa322a2a22fa6aaa62a24a82624a2a960591b604082015260600190565b6000826000018281548110611d1357611d13612cef565b9060005260206000200154905092915050565b60008181526001830160205260408120548015611e0f576000611d4a600183612c8d565b8554909150600090611d5e90600190612c8d565b9050818114611dc3576000866000018281548110611d7e57611d7e612cef565b9060005260206000200154905080876000018481548110611da157611da1612cef565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611dd457611dd4612f4e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610930565b6000915050610930565b600080611e30848460406001600160401b0361221c565b90508060000361092d5760405163349f5fdd60e11b8152600481018490526024016104f5565b600080611e6d848460406001600160401b0361221c565b90508060000361092d57604051639ffb34e960e01b8152600481018490526024016104f5565b600061a4b1461480611ea7575062066eeb46145b15611f0f5760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611eeb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190612c4a565b504390565b600061a4b1461480611f28575062066eeb46145b15611f8e576040516315a03d4160e11b815260048101839052606490632b407a8290602401602060405180830381865afa158015611f6a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190612c4a565b504090565b600080611fa48484600860ff61221c565b949350505050565b6000604051602001611be5906020808252600b908201526a4f5241434c455f5459504560a81b604082015260600190565b600080611ff18484602063ffffffff61221c565b90508060000361092d57604051630554193160e21b8152600481018490526024016104f5565b604080517f000000000000000000000000000000000000000000000000000000000000000060208201529081018b9052606081018a9052608081018990526001600160a01b03881660a082015260c0810187905260e08101869052610100810185905261012081018490526000906120a890610140016040516020818303038152906040528051906020012061228f565b905060006120b682856122c9565b9050826001600160a01b0316816001600160a01b0316146120ee5780836040516310b5d43760e21b81526004016104f5929190612f34565b505050505050505050505050565b60006002825161210c9190612f64565b6001036121415781600283516121229190612c79565b8151811061213257612132612cef565b60200260200101519050919050565b6002826001600285516121549190612c79565b61215e9190612c8d565b8151811061216e5761216e612cef565b602002602001015183600285516121859190612c79565b8151811061219557612195612cef565b60200260200101516121a79190612cbf565b6109309190612c79565b600061092d836001600160a01b0384166122ed565b6000808212156122185760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064016104f5565b5090565b60008061222b84610100612c79565b905060006122398287612c79565b9050600087828151811061224f5761224f612cef565b6020026020010151905060008684846122689190612ca0565b612272908a612c8d565b61227c9190612ca0565b9190911c85169350505050949350505050565b6040517b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6020820152603c8101829052600090605c01611c13565b60008060006122d8858561233c565b915091506122e581612381565b509392505050565b600081815260018301602052604081205461233457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610930565b506000610930565b60008082516041036123725760208301516040840151606085015160001a61236687828585612532565b9450945050505061237a565b506000905060025b9250929050565b600081600481111561239557612395612f78565b0361239d5750565b60018160048111156123b1576123b1612f78565b036123f95760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016104f5565b600281600481111561240d5761240d612f78565b0361245a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104f5565b600381600481111561246e5761246e612f78565b036124c65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104f5565b60048160048111156124da576124da612f78565b03610ba75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104f5565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561255f575060009050600361260c565b8460ff16601b1415801561257757508460ff16601c14155b15612588575060009050600461260c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156125dc573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126055760006001925092505061260c565b9150600090505b94509492505050565b604051806040016040528060008152602001600081525090565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610ba757600080fd5b60006020828403121561266a57600080fd5b813561092d81612643565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156126ae576126ae612675565b60405290565b604051601f8201601f191681016001600160401b03811182821017156126dc576126dc612675565b604052919050565b60008082840360608112156126f857600080fd5b833561270381612643565b92506040601f198201121561271757600080fd5b50604080519081016001600160401b038111828210171561273a5761273a612675565b60409081526020858101358352940135938101939093525092909150565b60006001600160401b0382111561277157612771612675565b5060051b60200190565b600082601f83011261278c57600080fd5b813560206127a161279c83612758565b6126b4565b82815260059290921b840181019181810190868411156127c057600080fd5b8286015b848110156127e45780356127d781612643565b83529183019183016127c4565b509695505050505050565b600082601f83011261280057600080fd5b8135602061281061279c83612758565b82815260059290921b8401810191818101908684111561282f57600080fd5b8286015b848110156127e45780358352918301918301612833565b6000601f838184011261285c57600080fd5b8235602061286c61279c83612758565b82815260059290921b8501810191818101908784111561288b57600080fd5b8287015b848110156129215780356001600160401b03808211156128af5760008081fd5b818a0191508a603f8301126128c45760008081fd5b858201356040828211156128da576128da612675565b6128eb828b01601f191689016126b4565b92508183528c818386010111156129025760008081fd5b818185018985013750600090820187015284525091830191830161288f565b50979650505050505050565b60008060006060848603121561294257600080fd5b833561294d81612643565b9250602084013561295d81612643565b915060408401356001600160401b038082111561297957600080fd5b90850190610160828803121561298e57600080fd5b61299661268b565b823581526020830135828111156129ac57600080fd5b6129b88982860161277b565b6020830152506040830135828111156129d057600080fd5b6129dc898286016127ef565b6040830152506060830135828111156129f457600080fd5b612a00898286016127ef565b606083015250608083013582811115612a1857600080fd5b612a24898286016127ef565b60808301525060a083013582811115612a3c57600080fd5b612a48898286016127ef565b60a08301525060c083013582811115612a6057600080fd5b612a6c898286016127ef565b60c08301525060e083013582811115612a8457600080fd5b612a90898286016127ef565b60e0830152506101008084013583811115612aaa57600080fd5b612ab68a8287016127ef565b8284015250506101208084013583811115612ad057600080fd5b612adc8a82870161284a565b8284015250506101408084013583811115612af657600080fd5b612b028a82870161277b565b8284015250508093505050509250925092565b60008060408385031215612b2857600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015612b785783516001600160a01b031683529284019291840191600101612b53565b50909695505050505050565b918252602082015260400190565b60008060408385031215612ba557600080fd5b8235612bb081612643565b91506020830135612bc081612643565b809150509250929050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060018201612c1757612c17612bef565b5060010190565b6020808252601290820152714d494e5f4f5241434c455f5349474e45525360701b604082015260600190565b600060208284031215612c5c57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082612c8857612c88612c63565b500490565b8181038181111561093057610930612bef565b6000816000190483118215151615612cba57612cba612bef565b500290565b8082018082111561093057610930612bef565b600060208284031215612ce457600080fd5b815161092d81612643565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612d1757600080fd5b8151801515811461092d57600080fd5b60018060a01b038316815260006020604081840152835180604085015260005b81811015612d6357858101830151858201606001528201612d47565b506000606082860101526060601f19601f830116850101925050509392505050565b600181815b80851115612dc0578160001904821115612da657612da6612bef565b80851615612db357918102915b93841c9390800290612d8a565b509250929050565b600082612dd757506001610930565b81612de457506000610930565b8160018114612dfa5760028114612e0457612e20565b6001915050610930565b60ff841115612e1557612e15612bef565b50506001821b610930565b5060208310610133831016604e8410600b8410161715612e43575081810a610930565b612e4d8383612d85565b8060001904821115612e6157612e61612bef565b029392505050565b600061092d8383612dc8565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0395909516855260208501939093526040840191909152151560608301521515608082015260a00190565b80516001600160501b0381168114612edf57600080fd5b919050565b600080600080600060a08688031215612efc57600080fd5b612f0586612ec8565b9450602086015193506040860151925060608601519150612f2860808701612ec8565b90509295509295909350565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052603160045260246000fd5b600082612f7357612f73612c63565b500690565b634e487b7160e01b600052602160045260246000fdfea26469706673582212208b0fcd74e1182d17fbb7e3e93639118a8e50ad6d28879de204654a7cefab404664736f6c63430008100033";

type OracleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: OracleConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _oracleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Oracle> {
    return super.deploy(_roleStore, _oracleStore, overrides || {}) as Promise<Oracle>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _oracleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _oracleStore, overrides || {});
  }
  override attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  override connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
