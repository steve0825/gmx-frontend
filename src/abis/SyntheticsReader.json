{
  "_format": "hh-sol-artifact-1",
  "contractName": "Reader",
  "sourceName": "contracts/reader/Reader.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "PRBMathUD60x18__Exp2InputTooBig",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "PRBMathUD60x18__LogInputTooSmall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        }
      ],
      "name": "PRBMath__MulDivFixedPointOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnableToGetBorrowingFactorEmptyPoolUsd",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getAccountOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "callbackContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uiFeeReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "initialCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "swapPath",
                  "type": "address[]"
                }
              ],
              "internalType": "struct Order.Addresses",
              "name": "addresses",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Order.OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Order.DecreasePositionSwapType",
                  "name": "decreasePositionSwapType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "sizeDeltaUsd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialCollateralDeltaAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "triggerPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acceptablePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "executionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "callbackGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOutputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAtBlock",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Order.Numbers",
              "name": "numbers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isLong",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shouldUnwrapNativeToken",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isFrozen",
                  "type": "bool"
                }
              ],
              "internalType": "struct Order.Flags",
              "name": "flags",
              "type": "tuple"
            }
          ],
          "internalType": "struct Order.Props[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "contract IReferralStorage",
          "name": "referralStorage",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "positionKeys",
          "type": "bytes32[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices[]",
          "name": "prices",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "uiFeeReceiver",
          "type": "address"
        }
      ],
      "name": "getAccountPositionInfoList",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "market",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "collateralToken",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Position.Addresses",
                  "name": "addresses",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sizeInUsd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sizeInTokens",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "longTokenFundingAmountPerSize",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "shortTokenFundingAmountPerSize",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "increasedAtBlock",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "decreasedAtBlock",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Position.Numbers",
                  "name": "numbers",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isLong",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Position.Flags",
                  "name": "flags",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Position.Props",
              "name": "position",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "referralCode",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "affiliate",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "trader",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalRebateFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "traderDiscountFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalRebateAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "traderDiscountAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "affiliateRewardAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionReferralFees",
                  "name": "referral",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "fundingFeeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimableLongTokenAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimableShortTokenAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "latestLongTokenFundingAmountPerSize",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "latestShortTokenFundingAmountPerSize",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionFundingFees",
                  "name": "funding",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeUsd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeReceiverFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeAmountForFeeReceiver",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionBorrowingFees",
                  "name": "borrowing",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "uiFeeReceiver",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "uiFeeReceiverFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "uiFeeAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionUiFees",
                  "name": "ui",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "max",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Price.Props",
                  "name": "collateralTokenPrice",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeReceiverFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeReceiverAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmountForPool",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeAmountForPool",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCostAmountExcludingFunding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCostAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct PositionPricingUtils.PositionFees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "priceImpactUsd",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceImpactDiffUsd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "executionPrice",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ReaderPricingUtils.ExecutionPriceResult",
              "name": "executionPriceResult",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "basePnlUsd",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "pnlAfterPriceImpactUsd",
              "type": "int256"
            }
          ],
          "internalType": "struct ReaderUtils.PositionInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getAccountPositions",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                }
              ],
              "internalType": "struct Position.Addresses",
              "name": "addresses",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "sizeInUsd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sizeInTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowingFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "longTokenFundingAmountPerSize",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "shortTokenFundingAmountPerSize",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "increasedAtBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "decreasedAtBlock",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Position.Numbers",
              "name": "numbers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isLong",
                  "type": "bool"
                }
              ],
              "internalType": "struct Position.Flags",
              "name": "flags",
              "type": "tuple"
            }
          ],
          "internalType": "struct Position.Props[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "callbackContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uiFeeReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "initialLongToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "initialShortToken",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "longTokenSwapPath",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "shortTokenSwapPath",
                  "type": "address[]"
                }
              ],
              "internalType": "struct Deposit.Addresses",
              "name": "addresses",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "initialLongTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialShortTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minMarketTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAtBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "executionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "callbackGasLimit",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Deposit.Numbers",
              "name": "numbers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "shouldUnwrapNativeToken",
                  "type": "bool"
                }
              ],
              "internalType": "struct Deposit.Flags",
              "name": "flags",
              "type": "tuple"
            }
          ],
          "internalType": "struct Deposit.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "marketKey",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "indexTokenPrice",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "positionSizeInUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSizeInTokens",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "sizeDeltaUsd",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        }
      ],
      "name": "getExecutionPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "priceImpactUsd",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceImpactDiffUsd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "executionPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct ReaderPricingUtils.ExecutionPriceResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "key",
          "type": "address"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "getMarketBySalt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices",
          "name": "prices",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "marketKey",
          "type": "address"
        }
      ],
      "name": "getMarketInfo",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "marketToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "indexToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "longToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "shortToken",
                  "type": "address"
                }
              ],
              "internalType": "struct Market.Props",
              "name": "market",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "borrowingFactorPerSecondForLongs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowingFactorPerSecondForShorts",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "longsPayShorts",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "fundingFactorPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_LongCollateral_LongPosition",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_LongCollateral_ShortPosition",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_ShortCollateral_LongPosition",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_ShortCollateral_ShortPosition",
                  "type": "int256"
                }
              ],
              "internalType": "struct MarketUtils.GetNextFundingAmountPerSizeResult",
              "name": "funding",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "virtualPoolAmountForLongToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "virtualPoolAmountForShortToken",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "virtualInventoryForPositions",
                  "type": "int256"
                }
              ],
              "internalType": "struct Reader.VirtualInventory",
              "name": "virtualInventory",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isDisabled",
              "type": "bool"
            }
          ],
          "internalType": "struct Reader.MarketInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices[]",
          "name": "marketPricesList",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoList",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "marketToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "indexToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "longToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "shortToken",
                  "type": "address"
                }
              ],
              "internalType": "struct Market.Props",
              "name": "market",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "borrowingFactorPerSecondForLongs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowingFactorPerSecondForShorts",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "longsPayShorts",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "fundingFactorPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_LongCollateral_LongPosition",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_LongCollateral_ShortPosition",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_ShortCollateral_LongPosition",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "fundingAmountPerSize_ShortCollateral_ShortPosition",
                  "type": "int256"
                }
              ],
              "internalType": "struct MarketUtils.GetNextFundingAmountPerSizeResult",
              "name": "funding",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "virtualPoolAmountForLongToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "virtualPoolAmountForShortToken",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "virtualInventoryForPositions",
                  "type": "int256"
                }
              ],
              "internalType": "struct Reader.VirtualInventory",
              "name": "virtualInventory",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isDisabled",
              "type": "bool"
            }
          ],
          "internalType": "struct Reader.MarketInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "market",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "indexTokenPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "longTokenPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "shortTokenPrice",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "pnlFactorType",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "maximize",
          "type": "bool"
        }
      ],
      "name": "getMarketTokenPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "poolValue",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "longPnl",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "shortPnl",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "netPnl",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "longTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longTokenUsd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortTokenUsd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrowingFees",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowingFeePoolFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "impactPoolAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct MarketPoolValueInfo.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getMarkets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "market",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "indexTokenPrice",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "maximize",
          "type": "bool"
        }
      ],
      "name": "getNetPnl",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "market",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "indexTokenPrice",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "maximize",
          "type": "bool"
        }
      ],
      "name": "getOpenInterestWithPnl",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "getOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "callbackContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uiFeeReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "initialCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "swapPath",
                  "type": "address[]"
                }
              ],
              "internalType": "struct Order.Addresses",
              "name": "addresses",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Order.OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Order.DecreasePositionSwapType",
                  "name": "decreasePositionSwapType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "sizeDeltaUsd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialCollateralDeltaAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "triggerPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acceptablePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "executionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "callbackGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOutputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAtBlock",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Order.Numbers",
              "name": "numbers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isLong",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shouldUnwrapNativeToken",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isFrozen",
                  "type": "bool"
                }
              ],
              "internalType": "struct Order.Flags",
              "name": "flags",
              "type": "tuple"
            }
          ],
          "internalType": "struct Order.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "market",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "indexTokenPrice",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "maximize",
          "type": "bool"
        }
      ],
      "name": "getPnl",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "marketAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices",
          "name": "prices",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "maximize",
          "type": "bool"
        }
      ],
      "name": "getPnlToPoolFactor",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "getPosition",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                }
              ],
              "internalType": "struct Position.Addresses",
              "name": "addresses",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "sizeInUsd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sizeInTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowingFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "longTokenFundingAmountPerSize",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "shortTokenFundingAmountPerSize",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "increasedAtBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "decreasedAtBlock",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Position.Numbers",
              "name": "numbers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isLong",
                  "type": "bool"
                }
              ],
              "internalType": "struct Position.Flags",
              "name": "flags",
              "type": "tuple"
            }
          ],
          "internalType": "struct Position.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "contract IReferralStorage",
          "name": "referralStorage",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "positionKey",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices",
          "name": "prices",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "sizeDeltaUsd",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "uiFeeReceiver",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "usePositionSizeAsSizeDeltaUsd",
          "type": "bool"
        }
      ],
      "name": "getPositionInfo",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "market",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "collateralToken",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Position.Addresses",
                  "name": "addresses",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sizeInUsd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sizeInTokens",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "longTokenFundingAmountPerSize",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "shortTokenFundingAmountPerSize",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "increasedAtBlock",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "decreasedAtBlock",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Position.Numbers",
                  "name": "numbers",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isLong",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Position.Flags",
                  "name": "flags",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Position.Props",
              "name": "position",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "referralCode",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "affiliate",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "trader",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalRebateFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "traderDiscountFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalRebateAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "traderDiscountAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "affiliateRewardAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionReferralFees",
                  "name": "referral",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "fundingFeeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimableLongTokenAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimableShortTokenAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "latestLongTokenFundingAmountPerSize",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "latestShortTokenFundingAmountPerSize",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionFundingFees",
                  "name": "funding",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeUsd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeReceiverFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowingFeeAmountForFeeReceiver",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionBorrowingFees",
                  "name": "borrowing",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "uiFeeReceiver",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "uiFeeReceiverFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "uiFeeAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PositionPricingUtils.PositionUiFees",
                  "name": "ui",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "max",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Price.Props",
                  "name": "collateralTokenPrice",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeReceiverFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeReceiverAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmountForPool",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeAmountForPool",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionFeeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCostAmountExcludingFunding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCostAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct PositionPricingUtils.PositionFees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "priceImpactUsd",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceImpactDiffUsd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "executionPrice",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ReaderPricingUtils.ExecutionPriceResult",
              "name": "executionPriceResult",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "basePnlUsd",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "pnlAfterPriceImpactUsd",
              "type": "int256"
            }
          ],
          "internalType": "struct ReaderUtils.PositionInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "market",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices",
          "name": "prices",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "positionKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "executionPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeDeltaUsd",
          "type": "uint256"
        }
      ],
      "name": "getPositionPnlUsd",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "marketToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "indexToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "longToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortToken",
              "type": "address"
            }
          ],
          "internalType": "struct Market.Props",
          "name": "market",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "indexTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "longTokenPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Price.Props",
              "name": "shortTokenPrice",
              "type": "tuple"
            }
          ],
          "internalType": "struct MarketUtils.MarketPrices",
          "name": "prices",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "uiFeeReceiver",
          "type": "address"
        }
      ],
      "name": "getSwapAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "feeReceiverAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeAmountForPool",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAfterFees",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "uiFeeReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "uiFeeReceiverFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "uiFeeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct SwapPricingUtils.SwapFees",
          "name": "fees",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "marketKey",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "tokenInPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "internalType": "struct Price.Props",
          "name": "tokenOutPrice",
          "type": "tuple"
        }
      ],
      "name": "getSwapPriceImpact",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DataStore",
          "name": "dataStore",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "getWithdrawal",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "callbackContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uiFeeReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "longTokenSwapPath",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "shortTokenSwapPath",
                  "type": "address[]"
                }
              ],
              "internalType": "struct Withdrawal.Addresses",
              "name": "addresses",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "marketTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minLongTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minShortTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAtBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "executionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "callbackGasLimit",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Withdrawal.Numbers",
              "name": "numbers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "shouldUnwrapNativeToken",
                  "type": "bool"
                }
              ],
              "internalType": "struct Withdrawal.Flags",
              "name": "flags",
              "type": "tuple"
            }
          ],
          "internalType": "struct Withdrawal.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061598280620000216000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c80630169a059146101175780630815bce114610144578063095ce6c5146101645780630fa8f5161461020d5780631485d2971461022d57806324c029e01461024d578063409f37c71461026e57806342a6f8d3146102e057806349651b6a146103005780635d2b44f9146103205780635d5c6efe14610340578063714af34b1461035357806377cfb16214610373578063847bb46914610393578063971de27d146103b3578063a0140938146103c6578063a4f0d550146103d9578063bc7b5bba146103ec578063ce3264bf1461040c578063ceeea3bf1461042c578063ece9e0c81461044c578063fd50649d1461046c575b600080fd5b61012a61012536600461386f565b61047f565b604080519283526020830191909152015b60405180910390f35b6101576101523660046138e4565b610593565b60405161013b9190613bf6565b610177610172366004613c05565b61062c565b60405161013b92919060006101808201905083825282516020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e083015161010081818501528085015191505061012081818501528085015191505061014081818501528085015161016085015250509392505050565b61022061021b366004613c82565b610720565b60405161013b9190613cae565b61024061023b366004613c82565b6107ac565b60405161013b9190613d3b565b61026061025b366004613e3f565b610832565b60405190815260200161013b565b61028161027c366004613eb0565b61084d565b604080519384526020808501939093528151848201529181015160608085019190915291810151608080850191909152918101516001600160a01b031660a0808501919091529181015160c0840152015160e08201526101000161013b565b6102f36102ee366004613f2b565b610927565b60405161013b91906140f8565b61031361030e366004613c82565b610a76565b60405161013b919061415a565b61033361032e36600461416d565b610afc565b60405161013b91906141d8565b61012a61034e3660046141e6565b610c15565b610366610361366004614270565b610d2b565b60405161013b91906142dc565b610386610381366004613f2b565b610dad565b60405161013b91906142ea565b6103a66103a1366004614339565b610eec565b60405161013b9190614411565b6102606103c1366004614420565b6110db565b6102606103d4366004613e3f565b611172565b6103666103e7366004613c82565b611181565b6103ff6103fa36600461451d565b6111c2565b60405161013b919061457c565b61041f61041a3660046145bf565b6112af565b60405161013b91906145f4565b61043f61043a366004613c82565b6113fc565b60405161013b9190614636565b61045f61045a3660046146ff565b611482565b60405161013b91906147ef565b61026061047a366004614832565b61156b565b600080600073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a886040518363ffffffff1660e01b81526004016104bd92919061488d565b61018060405180830381865af41580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906149eb565b6040516321ed73ef60e21b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__906387b5cfbc90610543908c908c908c9087908c908c90600401614a38565b6040805180830381865af415801561055f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105839190614aad565b9250925050965096945050505050565b61059b613133565b6040516306bc109960e31b815273__$7d62b333171909e88f9935bee8a07b01ad$__906335e084c8906105de908b908b908b908b908b908b908b90600401614ad1565b61060060405180830381865af41580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190614ce8565b98975050505050505050565b600061068b60405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051637d494dc360e01b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__90637d494dc3906106ce908c908c908c908c908c908c908c90600401614e2b565b61018060405180830381865af41580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190614e8d565b9150915097509795505050505050565b610728613174565b60405163fdfc26f360e01b815273__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f390610761908690869060040161488d565b61018060405180830381865af415801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a391906149eb565b90505b92915050565b6107b46131fe565b60405163fdfc26f360e01b815273__$b63e253a228f0e32f671cc49c7fc32477c$__9063fdfc26f3906107ed908690869060040161488d565b600060405180830381865af415801561080a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a39190810190614ffd565b60006108418686868686611579565b90505b95945050505050565b6000806108926040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b60405163dafa66bf60e01b815273__$ae023ddda47a46a9af6ec057a2ebe54454$__9063dafa66bf906108d3908c908c908c908c908c908c90600401615157565b61010060405180830381865af41580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091591906151a9565b92509250925096509650969350505050565b606060006109378686868661160a565b9050600081516001600160401b03811115610954576109546135b3565b60405190808252806020026020018201604052801561098d57816020015b61097a613290565b8152602001906001900390816109725790505b50905060005b8251811015610a695760008382815181106109b0576109b0615231565b6020026020010151905073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f38a836040518363ffffffff1660e01b81526004016109f392919061488d565b600060405180830381865af4158015610a10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a389190810190615342565b838381518110610a4a57610a4a615231565b6020026020010181905250508080610a619061547c565b915050610993565b509150505b949350505050565b610a7e613290565b60405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390610ab7908690869060040161488d565b600060405180830381865af4158015610ad4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a39190810190615342565b610b04613351565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610b40908c908c90600401615495565b608060405180830381865af4158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906154af565b604051630a37d4c760e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__9063146fa98e90610bc7908c9085908c908c908c908c908c90600401615516565b606060405180830381865af4158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c08919061556a565b9998505050505050505050565b600080600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58b8b6040518363ffffffff1660e01b8152600401610c53929190615495565b608060405180830381865af4158015610c70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9491906154af565b6040516340f5d44f60e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__906381eba89e90610cda908d9085908d908d908d908d908d90600401615586565b6040805180830381865af4158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a9190614aad565b925092505097509795505050505050565b610d33613372565b60405163a8d8fff560e01b815273__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610d6c9086908690600401615495565b608060405180830381865af4158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a391906154af565b60606000610dbd86868686611696565b9050600081516001600160401b03811115610dda57610dda6135b3565b604051908082528060200260200182016040528015610e1357816020015b610e00613174565b815260200190600190039081610df85790505b50905060005b8251811015610a69576000838281518110610e3657610e36615231565b6020026020010151905073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a836040518363ffffffff1660e01b8152600401610e7992919061488d565b61018060405180830381865af4158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb91906149eb565b838381518110610ecd57610ecd615231565b6020026020010181905250508080610ee49061547c565b915050610e19565b610ef4613399565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610f309088908790600401615495565b608060405180830381865af4158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7191906154af565b90506000610f8286838760016116b0565b90506000610f9387848860006116b0565b9050600073__$7d62b333171909e88f9935bee8a07b01ad$__630dc7f3eb89868a6040518463ffffffff1660e01b8152600401610fd2939291906155d8565b60c060405180830381865af4158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190615603565b90506000611021898661189d565b90506000896001600160a01b0316637ae1cfca61104188600001516118f1565b6040518263ffffffff1660e01b815260040161105f91815260200190565b602060405180830381865afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190615668565b6040805160c0810182529788526020880196909652948601939093526060850191909152608084015250151560a082015290505b9392505050565b60008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff588886040518363ffffffff1660e01b8152600401611117929190615495565b608060405180830381865af4158015611134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115891906154af565b90506111678782878787611974565b979650505050505050565b600061084186868686866119b8565b611189613372565b6040516329bc01e160e11b815273__$ff439aa65a80c9eec648f15db20b189505$__9063537803c290610d6c908690869060040161488d565b606060006111d18685856119e3565b9050600081516001600160401b038111156111ee576111ee6135b3565b60405190808252806020026020018201604052801561122757816020015b611214613399565b81526020019060019003908161120c5790505b50905060005b8251811015610a6957600087828151811061124a5761124a615231565b60200260200101519050600084838151811061126857611268615231565b6020026020010151905061127d8a8383610eec565b84848151811061128f5761128f615231565b6020026020010181905250505080806112a79061547c565b91505061122d565b606060006112be8585856119e3565b9050600081516001600160401b038111156112db576112db6135b3565b60405190808252806020026020018201604052801561131457816020015b611301613372565b8152602001906001900390816112f95790505b50905060005b82518110156113f257600083828151811061133757611337615231565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a846040518363ffffffff1660e01b815260040161137c929190615495565b608060405180830381865af4158015611399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bd91906154af565b9050808484815181106113d2576113d2615231565b6020026020010181905250505080806113ea9061547c565b91505061131a565b5095945050505050565b611404613414565b60405163fdfc26f360e01b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101125760003560e01c80630169a059146101175780630815bce114610144578063095ce6c5146101645780630fa8f5161461020d5780631485d2971461022d57806324c029e01461024d578063409f37c71461026e57806342a6f8d3146102e057806349651b6a146103005780635d2b44f9146103205780635d5c6efe14610340578063714af34b1461035357806377cfb16214610373578063847bb46914610393578063971de27d146103b3578063a0140938146103c6578063a4f0d550146103d9578063bc7b5bba146103ec578063ce3264bf1461040c578063ceeea3bf1461042c578063ece9e0c81461044c578063fd50649d1461046c575b600080fd5b61012a61012536600461386f565b61047f565b604080519283526020830191909152015b60405180910390f35b6101576101523660046138e4565b610593565b60405161013b9190613bf6565b610177610172366004613c05565b61062c565b60405161013b92919060006101808201905083825282516020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e083015161010081818501528085015191505061012081818501528085015191505061014081818501528085015161016085015250509392505050565b61022061021b366004613c82565b610720565b60405161013b9190613cae565b61024061023b366004613c82565b6107ac565b60405161013b9190613d3b565b61026061025b366004613e3f565b610832565b60405190815260200161013b565b61028161027c366004613eb0565b61084d565b604080519384526020808501939093528151848201529181015160608085019190915291810151608080850191909152918101516001600160a01b031660a0808501919091529181015160c0840152015160e08201526101000161013b565b6102f36102ee366004613f2b565b610927565b60405161013b91906140f8565b61031361030e366004613c82565b610a76565b60405161013b919061415a565b61033361032e36600461416d565b610afc565b60405161013b91906141d8565b61012a61034e3660046141e6565b610c15565b610366610361366004614270565b610d2b565b60405161013b91906142dc565b610386610381366004613f2b565b610dad565b60405161013b91906142ea565b6103a66103a1366004614339565b610eec565b60405161013b9190614411565b6102606103c1366004614420565b6110db565b6102606103d4366004613e3f565b611172565b6103666103e7366004613c82565b611181565b6103ff6103fa36600461451d565b6111c2565b60405161013b919061457c565b61041f61041a3660046145bf565b6112af565b60405161013b91906145f4565b61043f61043a366004613c82565b6113fc565b60405161013b9190614636565b61045f61045a3660046146ff565b611482565b60405161013b91906147ef565b61026061047a366004614832565b61156b565b600080600073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a886040518363ffffffff1660e01b81526004016104bd92919061488d565b61018060405180830381865af41580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906149eb565b6040516321ed73ef60e21b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__906387b5cfbc90610543908c908c908c9087908c908c90600401614a38565b6040805180830381865af415801561055f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105839190614aad565b9250925050965096945050505050565b61059b613133565b6040516306bc109960e31b815273__$7d62b333171909e88f9935bee8a07b01ad$__906335e084c8906105de908b908b908b908b908b908b908b90600401614ad1565b61060060405180830381865af41580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190614ce8565b98975050505050505050565b600061068b60405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051637d494dc360e01b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__90637d494dc3906106ce908c908c908c908c908c908c908c90600401614e2b565b61018060405180830381865af41580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190614e8d565b9150915097509795505050505050565b610728613174565b60405163fdfc26f360e01b815273__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f390610761908690869060040161488d565b61018060405180830381865af415801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a391906149eb565b90505b92915050565b6107b46131fe565b60405163fdfc26f360e01b815273__$b63e253a228f0e32f671cc49c7fc32477c$__9063fdfc26f3906107ed908690869060040161488d565b600060405180830381865af415801561080a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a39190810190614ffd565b60006108418686868686611579565b90505b95945050505050565b6000806108926040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b60405163dafa66bf60e01b815273__$ae023ddda47a46a9af6ec057a2ebe54454$__9063dafa66bf906108d3908c908c908c908c908c908c90600401615157565b61010060405180830381865af41580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091591906151a9565b92509250925096509650969350505050565b606060006109378686868661160a565b9050600081516001600160401b03811115610954576109546135b3565b60405190808252806020026020018201604052801561098d57816020015b61097a613290565b8152602001906001900390816109725790505b50905060005b8251811015610a695760008382815181106109b0576109b0615231565b6020026020010151905073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f38a836040518363ffffffff1660e01b81526004016109f392919061488d565b600060405180830381865af4158015610a10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a389190810190615342565b838381518110610a4a57610a4a615231565b6020026020010181905250508080610a619061547c565b915050610993565b509150505b949350505050565b610a7e613290565b60405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390610ab7908690869060040161488d565b600060405180830381865af4158015610ad4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a39190810190615342565b610b04613351565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610b40908c908c90600401615495565b608060405180830381865af4158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906154af565b604051630a37d4c760e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__9063146fa98e90610bc7908c9085908c908c908c908c908c90600401615516565b606060405180830381865af4158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c08919061556a565b9998505050505050505050565b600080600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58b8b6040518363ffffffff1660e01b8152600401610c53929190615495565b608060405180830381865af4158015610c70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9491906154af565b6040516340f5d44f60e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__906381eba89e90610cda908d9085908d908d908d908d908d90600401615586565b6040805180830381865af4158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a9190614aad565b925092505097509795505050505050565b610d33613372565b60405163a8d8fff560e01b815273__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610d6c9086908690600401615495565b608060405180830381865af4158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a391906154af565b60606000610dbd86868686611696565b9050600081516001600160401b03811115610dda57610dda6135b3565b604051908082528060200260200182016040528015610e1357816020015b610e00613174565b815260200190600190039081610df85790505b50905060005b8251811015610a69576000838281518110610e3657610e36615231565b6020026020010151905073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a836040518363ffffffff1660e01b8152600401610e7992919061488d565b61018060405180830381865af4158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb91906149eb565b838381518110610ecd57610ecd615231565b6020026020010181905250508080610ee49061547c565b915050610e19565b610ef4613399565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610f309088908790600401615495565b608060405180830381865af4158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7191906154af565b90506000610f8286838760016116b0565b90506000610f9387848860006116b0565b9050600073__$7d62b333171909e88f9935bee8a07b01ad$__630dc7f3eb89868a6040518463ffffffff1660e01b8152600401610fd2939291906155d8565b60c060405180830381865af4158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190615603565b90506000611021898661189d565b90506000896001600160a01b0316637ae1cfca61104188600001516118f1565b6040518263ffffffff1660e01b815260040161105f91815260200190565b602060405180830381865afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190615668565b6040805160c0810182529788526020880196909652948601939093526060850191909152608084015250151560a082015290505b9392505050565b60008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff588886040518363ffffffff1660e01b8152600401611117929190615495565b608060405180830381865af4158015611134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115891906154af565b90506111678782878787611974565b979650505050505050565b600061084186868686866119b8565b611189613372565b6040516329bc01e160e11b815273__$ff439aa65a80c9eec648f15db20b189505$__9063537803c290610d6c908690869060040161488d565b606060006111d18685856119e3565b9050600081516001600160401b038111156111ee576111ee6135b3565b60405190808252806020026020018201604052801561122757816020015b611214613399565b81526020019060019003908161120c5790505b50905060005b8251811015610a6957600087828151811061124a5761124a615231565b60200260200101519050600084838151811061126857611268615231565b6020026020010151905061127d8a8383610eec565b84848151811061128f5761128f615231565b6020026020010181905250505080806112a79061547c565b91505061122d565b606060006112be8585856119e3565b9050600081516001600160401b038111156112db576112db6135b3565b60405190808252806020026020018201604052801561131457816020015b611301613372565b8152602001906001900390816112f95790505b50905060005b82518110156113f257600083828151811061133757611337615231565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a846040518363ffffffff1660e01b815260040161137c929190615495565b608060405180830381865af4158015611399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bd91906154af565b9050808484815181106113d2576113d2615231565b6020026020010181905250505080806113ea9061547c565b91505061131a565b5095945050505050565b611404613414565b60405163fdfc26f360e01b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$",
  "linkReferences": {
    "contracts/deposit/DepositStoreUtils.sol": {
      "DepositStoreUtils": [
        {
          "length": 20,
          "start": 2020
        }
      ]
    },
    "contracts/market/MarketStoreUtils.sol": {
      "MarketStoreUtils": [
        {
          "length": 20,
          "start": 2871
        },
        {
          "length": 20,
          "start": 3133
        },
        {
          "length": 20,
          "start": 3427
        },
        {
          "length": 20,
          "start": 3879
        },
        {
          "length": 20,
          "start": 4353
        },
        {
          "length": 20,
          "start": 4537
        },
        {
          "length": 20,
          "start": 4966
        }
      ]
    },
    "contracts/market/MarketUtils.sol": {
      "MarketUtils": [
        {
          "length": 20,
          "start": 1723
        }
      ]
    },
    "contracts/order/OrderStoreUtils.sol": {
      "OrderStoreUtils": [
        {
          "length": 20,
          "start": 2525
        },
        {
          "length": 20,
          "start": 2734
        }
      ]
    },
    "contracts/position/PositionStoreUtils.sol": {
      "PositionStoreUtils": [
        {
          "length": 20,
          "start": 1191
        },
        {
          "length": 20,
          "start": 1880
        },
        {
          "length": 20,
          "start": 3683
        }
      ]
    },
    "contracts/position/PositionUtils.sol": {
      "PositionUtils": [
        {
          "length": 20,
          "start": 1330
        }
      ]
    },
    "contracts/reader/ReaderPricingUtils.sol": {
      "ReaderPricingUtils": [
        {
          "length": 20,
          "start": 2242
        },
        {
          "length": 20,
          "start": 2996
        },
        {
          "length": 20,
          "start": 3271
        }
      ]
    },
    "contracts/reader/ReaderUtils.sol": {
      "ReaderUtils": [
        {
          "length": 20,
          "start": 1483
        },
        {
          "length": 20,
          "start": 4026
        }
      ]
    },
    "contracts/withdrawal/WithdrawalStoreUtils.sol": {
      "WithdrawalStoreUtils": [
        {
          "length": 20,
          "start": 5172
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/deposit/DepositStoreUtils.sol": {
      "DepositStoreUtils": [
        {
          "length": 20,
          "start": 1987
        }
      ]
    },
    "contracts/market/MarketStoreUtils.sol": {
      "MarketStoreUtils": [
        {
          "length": 20,
          "start": 2838
        },
        {
          "length": 20,
          "start": 3100
        },
        {
          "length": 20,
          "start": 3394
        },
        {
          "length": 20,
          "start": 3846
        },
        {
          "length": 20,
          "start": 4320
        },
        {
          "length": 20,
          "start": 4504
        },
        {
          "length": 20,
          "start": 4933
        }
      ]
    },
    "contracts/market/MarketUtils.sol": {
      "MarketUtils": [
        {
          "length": 20,
          "start": 1690
        }
      ]
    },
    "contracts/order/OrderStoreUtils.sol": {
      "OrderStoreUtils": [
        {
          "length": 20,
          "start": 2492
        },
        {
          "length": 20,
          "start": 2701
        }
      ]
    },
    "contracts/position/PositionStoreUtils.sol": {
      "PositionStoreUtils": [
        {
          "length": 20,
          "start": 1158
        },
        {
          "length": 20,
          "start": 1847
        },
        {
          "length": 20,
          "start": 3650
        }
      ]
    },
    "contracts/position/PositionUtils.sol": {
      "PositionUtils": [
        {
          "length": 20,
          "start": 1297
        }
      ]
    },
    "contracts/reader/ReaderPricingUtils.sol": {
      "ReaderPricingUtils": [
        {
          "length": 20,
          "start": 2209
        },
        {
          "length": 20,
          "start": 2963
        },
        {
          "length": 20,
          "start": 3238
        }
      ]
    },
    "contracts/reader/ReaderUtils.sol": {
      "ReaderUtils": [
        {
          "length": 20,
          "start": 1450
        },
        {
          "length": 20,
          "start": 3993
        }
      ]
    },
    "contracts/withdrawal/WithdrawalStoreUtils.sol": {
      "WithdrawalStoreUtils": [
        {
          "length": 20,
          "start": 5139
        }
      ]
    }
  }
}
